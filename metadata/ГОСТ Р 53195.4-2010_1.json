{
    "filename": "ГОСТ Р 53195.4-2010_1.pdf",
    "full_name": "Безопасность функциональная связанных с безопасностью зданий и сооружений систем. Часть 4. Требования к программному обеспечению",
    "number": "53195.4-2010",
    "date_issue": "2018-10",
    "document_type": "ГОСТ Р",
    "language": "Russian",
    "category": "Безопасность",
    "source": "51040.pdf",
    "total_pages": 41,
    "status": "Неопределен",
    "pages": [
        {
            "page": 1,
            "page_content": "ФЕДЕРАЛЬНОЕ АГЕНТСТВО \nПО ТЕХНИЧЕСКОМУ РЕГУЛИРОВАНИЮ И МЕТРОЛОГИИ\nН А Ц И О Н А Л Ь Н Ы Й\nС Т А Н Д А Р Т\nР О С С И Й С К О Й\nФ Е Д Е Р А Ц И И\nГОСТР\n53195.4-\n2010\nБЕЗОПАСНОСТЬ ФУНКЦИОНАЛЬНАЯ \nСВЯЗАННЫХ С БЕЗОПАСНОСТЬЮ ЗДАНИЙ \nИ СООРУЖЕНИЙ СИСТЕМ\nЧ а с т ь  4\nТребования к программному обеспечению\n(IEC 61508-3:2010, NEQ)\n(IEC 61508-4:2010, NEQ)\n(ISO/IEC Guide 51:1999, NEQ)\nИздание официальное\nСтандартИ1ф<цм\n2011\nнаписание ту"
        },
        {
            "page": 2,
            "page_content": "ГОСТ Р 53195.4—2010\nПредисловие\n1 РАЗРАБОТАН Университетом комплексных систем безопасности и инженерного обеспечения\n2 ВНЕСЕН Техническим комитетом по стандартизации ТК 439 «Средства автоматизации и си­\nстемы управления» при поддержке Технического комитета по стандартизации ТК 465 «Строительство»\n3 УТВЕРЖДЕН И ВВЕДЕН В ДЕЙСТВИЕ Приказом Федерального агентства по техническому ре­\nгулированию и метрологии от 21 декабря 2010 г. № 820-ст\n4 В настоящем стандарте учтены основные нормативные положения следующих международных \nстандартов:\nМЭК 61508-3:2010 «Функциональная безопасность систем электрических, электронных, програм­\nмируемых электронных, связанных с безопасностью. Часть 3. Требования к программному обеспече­\nнию» (IEC 61508-3:2010 «Functional safety of electncal/electronic/programmable electronic safety-related \nsystems — Part 3: Software requirements», NEQ)\nМЭК 61508-4:2010 «Функциональная безопасность систем электрических, электронных, програм­\nмируемых электронных, связанных с безопасностью. Часть 4. Термины, определения, сокращения» \n(IEC 61508-4:2010 «Functional safety of electrical/electronic/programmable electronic safety-related sys­\ntems — Part 4: Definitions and abbreviations», NEQ)\nРуководство ИСО/МЭК 51:1999 «Аспекты безопасности. Руководящие указания по включению их \nв стандарты» (ISO/IEC Guide 51:1999 «Safety aspects — Guidelines for their inclusion in standards». NEQ)\n5 ВВЕДЕН ВПЕРВЫЕ\n6 ПЕРЕИЗДАНИЕ. Октябрь 2018 г.\nПравила применения настоящего стандарта установлены в статье 26 Федвралыюго закона \nот 29 июня 2015 г. № 162-ФЗ «О стандартизации в Российской Федерации». Информация об \nизменениях к настоящему стандарту публикуется в ежегодном (по состоянию на 1 января текущего \nгода) информациотюм указателе «Национальные стандарты», а официальный текст изменений \nи поправок — в ежемесячном информационном указателе «Национальные стандарты». В случае \nпересмотра (замены) или отмены настоящего стандарта соответствующее уведомление будет \nопубликовано в ближайшем выпуске ежемесячного информационного указателя «Национальные \nстандарты». Соответствующая информация, уведомление и тексты размещаются также в \nинформационной системе общего пользования — на официальном сайте Федерального агентства \nпо техническому регулированию и метрологии в сети Интернет (www.gost.ru)\n© Стандартинформ. оформление. 2018\nНастоящий стандарт не может быть полностью или частично воспроизведен, тиражирован и рас­\nпространен в качестве официального издания без разрешения Федерального агентства по техническо­\nму регулированию и метрологии\nII"
        },
        {
            "page": 3,
            "page_content": "ГОСТ Р 53195.4—2010\nСодержание\n1 Область применения..........................................................................................................................................1\n2 Нормативные ссылки..........................................................................................................................................2\n3 Термины и определения.............................................................................  \n \n \n \n3\n4 Обозначения и сокращения.............................................................................................................................4\n5 Требования.......................................................................................................................................................... 4\n5.1 Соответствие требованиям стандарта.....................................  \n \n4\n5.2 Требования к документации.....................................................................................................................4\n5.3 Требования к управлению функциональной безопасностью.............................................................4\n5.4 Общие требования к СБЗС П О .................................................................................................................4\n5.5 Требования к жизненному циклу СБЗС П О ........................................................................................... 5\n5.6 Требования к обеспечению безопасности П О ....................................................................................... 7\n5.7 Ввод в действие, эксплуатация и модификация П О ..........................................................................18\n5.8 Верификация П О ......................................................................................................................................21\n6 Оценка функциональной безопасности........................................................................................................24\nПриложение А (справочное) Руководство по выбору методов и средств.............................................. 25\nПриложение Б (справочное) Подробные таблицы....................................................................................... 31\nБиблиография.......................................................................................................................................................35"
        },
        {
            "page": 4,
            "page_content": "ГОСТ Р 53195.4—2010\nВведение\nСовременные здания и сооружения — объекты капитального строительства — представляют со­\nбой сложные системы, включающие в свой состав систему конструкций и ряд систем в разных сочета­\nниях, в том числе инженерные системы жизнеобеспечения, реализации технологических процессов, \nэнерго-, ресурсосбережения, безопасности и другие системы. Эти системы взаимодействуют друг с \nдругом, с внешней и внутренней средами.\nОбъекты капитального строительства жестко привязаны к местности. Рабочие характеристики \nзданий, сооружений и входящих в них систем могут быть реализованы, проверены и использованы \nтолько в том месте, в котором объекты построены и системы установлены.\nБезопасность зданий и сооружений обеспечивается применением совокупности мер. мероприя­\nтий и средств снижения риска причинения вреда до уровня приемлемого риска и поддержания его в те­\nчение периода эксплуатации или использования этих объектов. К средствам снижения риска относятся \nсистемы, связанные с безопасностью зданий и сооружений. Эти системы, состоящие из электрических, \nи/или электронных компонентов, и/или программируемых электронных компонентов, в течение многих \nлет используются для выполнения функций безопасности. Для решения задач безопасности зданий и \nсооружений во все больших объемах используются программируемые электронные (в том числе ком­\nпьютерные) системы.\nНастоящий стандарт устанавливает основные требования к функциональной безопасности про­\nграммного обеспечения программируемых электронных систем, связанных с безопасностью зданий и \nсооружений, и к программному обеспечению, используемому для разработки таких систем в рамках \nобласти применения ГОСТ Р 53195.1, ГОСТ Р 53195.2 и ГОСТ Р 53195.3.\nСтандарт устанавливает требования к действиям и процедурам, которые должны быть выполне­\nны на стадиях жизненного цикла программного обеспечения этих систем для достижения и поддержа­\nния их функциональной безопасности.\nНастоящий стандарт входит в комплекс стандартов с наименованием «Безопасность функцио­\nнальная связанных с безопасностью зданий и сооружений систем» и является четвертым стандартом \nэтого комплекса «Часть 4. Требования к программному обеспечению». Другие стандарты, входящие в \nэтот комплекс:\nЧасть 1. Основные положения;\nЧасть 2. Общие требования;\nЧасть 3. Требования к системам;\nЧасть 5. Меры по снижению риска, методы оценки;\nЧасть 6. Внешние средства уменьшения риска, системы мониторинга;\nЧасть 7. Порядок применения требований, примеры расчетов.\nСтруктура комплекса стандартов приведена ниже.\nIV"
        },
        {
            "page": 5,
            "page_content": "ГОСТ Р 53195.4—2010\nЧИТЫ\nОблип он (и р га м , х и м и и  и олилеими. \nВ ж в ш о ь  алсгвы. СЕЭС-остш. Ж п « ш 1 i*m  \nВ О Т Д 8& И 1*1 ftttm  пЛиОП Я>*тагп*П]ц \nе№/ре СЕ&Хжгт, геосттадстадот», о«чм « рад* \nП(а««4а! устживап»1— яжтутажзсашаи, \nП ри|Л к о у м п и мт урамИ валю т В апояж лт\nЧасть 2\nО&ию-гробсмм ы тстовнюей досушитчцн \nК  EfePE С5ЭС-0П7ТН Я1. ТРВбОВВИИ  I  жпоиннтадн \nТра В м вц вуу\nги 1И1фумциа1емЫ ^ддарвсти. \n. Оборе  трвбочви К11ШШ1— У ■>■■!■! м/ ешту Е/ЕТС \nС6ЭС с» «гад м ог> сллвпг >faan пцлкпы берпнмхт \nОблив тробам е ■ аи вф р ш ц ш и н вЯ  \nП и на  п н и  ГГПТТГПТГ ч т и\nчи п »\n~2ZT\\\nT |i i w\n ю ц р м  громсгяршвния, плана рсннмя\nи|~1Ии » |щ г г т т  п**р iumtii тупим ■■ и pieyoi\nм м  «радами Е /ьге СВЭС-аегм: к попет» бмспо-\nнэстк, ||мцищ тцлиш т1ж«па.у||шв— нацв-пимл- \nЧИМШМ <7П***ЫИ, ГОаДОМ'ОСТЮТрЫЫ ЦМСЙНИ И ПМ \nоткажи. ш р «м л ш 1п ц  цвщкурш жапуаш ци \nш ш  m 11 in i^Tiiy n—\n h i. гияш^1 дрип<жхз1шш1ши< \nИ0ДИ<— —1, Н И Щ И $Ш, ОЦСТШ ФУМИОНВПН* \nбвщшшел и\nчи п »\n1йвры по м я т о  р я ц  яррщн оцм н\nЬЬ|1»И К<?К»У1ШЖ»ЛрОШСГу ж11[аЖПТТВЖЖ1 \nипрепвжфодгга БС*>Е С&Соилтм. \nм ели и пчепп ияяючию яютшжостис стивов. \nМсгеду и стиетшв даяииим пелиты бооовмооги ПО. \nВадик йип— ■ицц I опрадишмя галиот \nбю ш ш кП О\nЧ ипб\nh —\ni |H » 4 4 W\nИП1ВПТН1—\nТсйшамикшши»шмц и ).1 м у — !!■ — \nТлевшими I п в т ш  ш ш ц м п . \nТ Ш ш и  камню оомимшм\n■ )ЮТпг1иВИ ПМфЖНЖ WWWimillBHI\nЧИТ> 4\nТРДМ—\nI К ЦП гг м м  I пну 0CIW\nI—  \nТ^нбддш— им  I— I у||шж»«ж ид mil  11ч  и ГЮ \nВВДРЕ СЕЭОсмоган. ТрвВямв яаипявиому щиту ПО \nне сшадик mewpoew*. p»i*6crw, pwmwpw. \nТумбавиния к 0ЖЖЗГКНЭСШ ПО, пжмфажнв гелтшр- \nщпи—||1М11ии иив.Т|лА|адм кржадйашвПО, ж я г \niMLUwipcnMMMHpyauoAaniinpoHMU. крабом ПО \n“  \ny tw frm m , 1НДт»РЧ1«*\n‘ЦИ|мм1кад1фяга1риПО,<1рош\njm S H S flS S S S S !\nЧ»0т 7\nп\nчшлрш радеюж\nТрайаенм г стадии грамгадемот, ггшшрашнш \nир—д— *Б'В^сеас-оюшП]хйои1И1чгжш- \nрвпеи цщцтаи ЕВРЕ саю-иашк попел \nваж паесщ  цшцш ц т емюютжжж■. /h\nw\nb iii\nоешвтчкммиотпмни. войдя вво стеши\nгр« евнофужпве  отказав, надавив явных. грацвдадш \nесглувтаде, тстовмадро оввдмемм, \nлекпиждяшооопототя. надЩ иня  \n■адфмрвц тврия фрцадитеЯ беапвасагм\nV"
        },
        {
            "page": 6,
            "page_content": "ГОСТ Р 53195.4—2010\nН А Ц И О Н А Л Ь Н Ы Й  \nС Т А Н Д А Р Т  Р О С С И Й С К О Й  \nФ Е Д Е Р А Ц И И\nБЕЗОПАСНОСТЬ ФУНКЦИОНАЛЬНАЯ СВЯЗАННЫХ С БЕЗОПАСНОСТЬЮ ЗДАНИЙ\nИ СООРУЖЕНИЙ СИСТЕМ\nЧ а с т ь  4\nТребования к программному обеспечению\nFunctional safety of building/erection safety-related systems. Part 4. Software requirements\nДата введения — 2012—01—01\n1 Область применения\nНастоящий стандарт распространяется на:\n- программное обеспечение (далее — ПО) программируемых электронных связанных с безопас­\nностью зданий и сооружений систем (далее — Е/Е/РЕ СБЗС-систем). в дальнейшем именуемое СБЗС \nПО. а также на системы, подсистемы и компоненты внутри Е/Е/РЕ СБЗС-систем, которые содержат \nхотя бы один программируемый электронный компонент;\n-любое программное обеспечение, являющееся частью СБЗС-системы либо используемое \nдля разработки системы, связанной с безопасностью, в рамках области применения ГОСТ Р 53195.1, \nГОСТ Р 53195.2 и ГОСТ Р 53195.3. Такое программное обеспечение называется программным обе­\nспечением систем, связанных с безопасностью зданий и сооружений (далее — СБЗС ПО). СБЗС ПО \nвключает в себя операционные системы, системное программное обеспечение, программы, использу­\nемые в коммуникационных сетях, интерфейсы пользователей и обслуживающего персонала, инстру­\nментальные средства поддержки, встроенные программно-аппаратные средства, а также прикладные \nпрограммы. Прикладные программы включают в себя программы высокого и низкого уровней, а также \nспециальные программы на языках с ограниченной варьируемостью (см. 3.12) [1].\nНастоящий стандарт устанавливает:\n- требования к стадиям жизненного цикла СБЗС ПО и действиям, которые должны предприни­\nматься на этих стадиях во избежание ошибок и отказов СБЗС ПО и для принятия необходимых мер при \nих возникновении:\n- минимальный состав информации, относящейся к подтверждению безопасности СБЗС ПО. не­\nобходимой для установки, ввода в действие, интеграции и подтверждения соответствия Е/Е/РЕ СБЗС- \nсистем требованиям безопасности;\n- требования к подготовке информации и процедурам, относящимся к СБЗС ПО, необходимым \nпользователю для работы и поддержания Е/Е/РЕ СБЗС-систем в период эксплуатации;\n- требования, предъявляемые к действиям при выполнении модификации СБЗС ПО;\n- совместно с ГОСТ Р 53195.1. ГОСТ Р 53195.2, ГОСТ Р 53195.3 и ГОСТ Р 53195.5 требования к \nинструментальным средствам поддержки.\nП р и м е ч а н и е  — Области применения ГОСТ Р 53195.3 и ГОСТ Р 53195.4 взаимосвязаны между собой \n(см. рисунок 1).\nНастоящий стандарт не распространяется на ПО одиночных СБЗС-систем. способных осуще­\nствить необходимое снижение риска, и требуемая полнота безопасности которых ниже самого низкого \nуровня полноты безопасности (SIL1). определенного в таблицах 1 и 2 ГОСТ Р 53195.2—2008.\nНастоящий стандарт должен применяться совместно с ГОСТ Р 53195.1, ГОСТ Р 53195.2, \nГОСТ Р 53195.3 и ГОСТ Р 53195.5.\nИздание официальное\n1"
        },
        {
            "page": 7,
            "page_content": "ГОСТ Р 53195.4—2010\nРисунок 1 — Взаимосвязь областей применения АС и ПО\n2 Нормативные ссылки\nВ настоящем стандарте использованы нормативные ссылки на следующие стандарты:\nГОСТ Р 53195.1 Безопасность функциональная связанных с безопасностью зданий и сооруже­\nний систем. Часть 1. Основные положения\nГОСТ Р 53195.2—2008 Безопасность функциональная связанных с безопасностью зданий и со­\nоружений систем. Часть 2. Общие требования\nГОСТ Р 53195.3 Безопасность функциональная связанных с безопасностью зданий и сооруже­\nний систем. Часть 3. Требования к системам\nГОСТ Р 53195.5—2010 Безопасность функциональная связанных с безопасностью зданий и со­\nоружений систем. Часть 5. Меры по снижению риска, методы оценки\nП р и м е ч а н и е  — При пользовании настоящим стандартом целесообразно проверить действие ссылочных \nстандартов в информационной системе общего пользования — на официальном сайте Федерального агентства по \nтехническому регулированию и метрологии в сети Интернет или по ежегодному информационному указателю «На­\nциональные стандарты», который опубликован по состоянию на 1 января текущего года, и по выпускам ежемесяч­\nного информационного указателя «Национальные стандарты» за текущий год. Если заменен ссылочный стандарт, \nна который дана недатированная ссылка, то рекомендуется использовать действующую версию этого стандарта \nс учетом всех внесенных в данную версию изменений. Если заменен ссылочный стандарт, на который дана дати-\n2"
        },
        {
            "page": 8,
            "page_content": "ГОСТ Р 53195.4—2010\nрованная ссылка, то рекомендуется использовать версию этого стандарта с указанным выше годом утверждения \n(принятия). Если после утверждения настоящего стандарта в ссылочный стандарт, на который дана датированная \nссылка, внесено изменение, затрагивающее положение, на которое дана ссылка, то это положение рекомендуется \nприменять без учета данного изменения. Если ссылочный стандарт отменен без замены, то положение, в котором \nдана ссылка на него, рекомендуется применять в части, не затрагивающей эту ссыпку.\n3 Термины и определения\nВ настоящем стандарте применены термины по ГОСТ Р 53195.1, ГОСТ Р 53195.2, ГОСТ Р 53195.3 \nи ГОСТ Р 53195.5, а также следующие термины с соответствующими определениями.\n3.1 анимация (animation): Имитация работы программного обеспечения (или отдельной его ча­\nсти), предназначенная для отображения существенных аспектов поведения программируемой элек­\nтронной системы, связанной с безопасностью зданий и сооружений.\nП р и м е ч а н и я\n1 Анимация применима, например, к спецификации требований для представления проекта системы на до­\nстаточно высоком уровне в соответствующем формате.\n2 Анимация позволяет оценить специфическое поведение системы при задании параметров и данных, близ­\nких к реальным.\n3.2 динамическое юстирование (dynamic testing): Работа программного обеспечения и/или ра­\nбота аппаратного средства, выполняемая под контролем и планомерно для демонстрации наличия \nтребуемого поведения и отсутствия нежелательного поведения.\nП р и м е ч а н и е  — Динамическое тестирование представляет собой противоположность статическому ана­\nлизу. при котором не требуется выполнение программ.\n3.3 жизненный цикл программного обеспечения (software lifecycle): Период времени, включа­\nющий в себя стадии: разработки требований к программному обеспечению, разработки программного \nобеспечения, кодирования, тестирования, интеграции, установки, а также стадию модификации.\n3.4 избыточность (redundancy): Наличие средств в дополнение к средствам, которые могут \nбыть достаточны функциональному блоку, для выполнения требуемой операции или данным для пред­\nставления информации.\nПример — Примерами избыточности являются дублирование функциональных компонентов и \nдобавление битов четности.\n3.5 инспекция программы по Файгану (Fagan inspection): Один из методов обнаружения оши­\nбок на ранних этапах разработки программного обеспечения рабочей группой (при подготовке требова­\nний. проектировании, начальных этапах кодирования, планировании тестов), основанный на тщатель­\nном анализе первичных документов и проверке соответствия им вторичных документов.\n3.6 инструментальные средства поддержки программного обеспечения, инструментальные \nсредства поддержки ПО: Средства разработки, проектирования, кодирования, тестирования, отладки, \nуправления конфигурацией программного обеспечения.\n3.7 полнота безопасности программного обеспечения (software safety integrity): Количествен­\nная характеристика, которая означает вероятность того, что программное обеспечение программиру­\nемой электронной системы будет выполнять заданные функции безопасности при всех оговоренных \nусловиях в течение установленного периода времени.\n3.8 программное обеспечение. ПО (software): Продукт интеллектуальной деятельности, вклю­\nчающий в свой состав программы, процедуры, данные, правила и ассоциированную информацию, име­\nющую отношение к работе системы обработки данных.\nП р и м е ч а н и е  — Программное обеспечение является независимым от носителя записи, на котором оно \nзаписано.\n3.9 тестовая программа (test harness): Программный продукт, который позволяет имитировать \nсреду, в которой будет действовать разрабатываемое программное обеспечение или аппаратное сред­\nство. путем передачи тестовых данных в программу и регистрации ответа.\n3.10 уровень полноты безопасности программного обеспечения (software safety integrity \nlevel): Дискретный уровень (принимающий одно из четырех возможных значений от 1 до 4). определя­\nющий полноту безопасности программного обеспечения в связанной с безопасностью системе.\n3"
        },
        {
            "page": 9,
            "page_content": "ГОСТ Р 53195.4—2010\n3.11 функциональный блок (functional unit): Объект аппаратного средства и/или программного \nобеспечения, выполняющий определенную задачу.\n3.12 язык с ограниченной варьируемостью (limited variability language): Текстовый или графи­\nческий язык программирования, предназначенный для коммерческих и промышленных программируе­\nмых электронных логических контроллеров, диапазон возможностей которого ограничен применением \nэтих устройств.\nПример — К языкам с ограниченной изменчивостью, которые используются для представления \nприкладных программ для систем на основе программируемых логических контроллеров, относятся:\n- многоступенчатые схемы: графический язык, состоящий из набора символов для входов (пред­\nставляющих поведение, характерное для таких устройств, как контакты, которые в нормальном со­\nстоянии замкнуты или разомкнуты), соединенных с помощью линий (указывающих направление тока), \nс символами, обозначающими выходы (представляющими поведение, свойственное реле):\n- булева алгебра: низкоуровневый язык, основанный на булевых операторах, таких как И, ИЛИ и \nНЕ, с возможностью добавления некоторых мнемонических инструкций;\n- функциональные блок-диаграммы: в дополнение к булевым операторам допускают использова­\nние более сложных функций, таких как операции с файлами, чтение и запись бгюков данных, команд для \nсдвиговых регистров и устройств, задающих последовательность;\n- последовательные функциональные схемы: графическое представление многостадийной про­\nграммы. состоящее из взаимосвязанных шагов, действий и ориентированных связей с промежуточны­\nми состояниями.\n4 Обозначения и сокращения\nВ настоящем стандарте приняты следующие обозначения и сокращения:\nАРМ — автоматизированное рабочее место;\nАС — аппаратное(ые) средство(а);\nПЗУ — постоянное запоминающее устройство;\nПЛК — программируемый логический контроллер;\nПО — программное обеспечение;\nСБЗС ПО — программное обеспечение системы, связанной с безопасностью зданий и сооружений;\nСБЗС-система — система, связанная с безопасностью зданий и сооружений;\nУО — управляемое оборудование;\nЕ/Е/РЕ — электрическая, и/или электронная, и/или программируемая электронная (в отношении \nсистемы).\nРЕ — программируемая электроника (программируемое электронное средство, программируе­\nмая электронная система):\nSIL — обозначение уровня полноты безопасности.\n5 Требования\n5.1 Соответствие требованиям стандарта\nПризнание соответствия СБЗС ПО требованиям настоящего стандарта — по ГОСТ Р 53195.2—2008 \n(см. 5.1).\n5.2 Требования к документации\nТребования к документации Е/Е/РЕ СБЗС-систем — по ГОСТ Р 53195.2—2008 (см. 5.2).\n5.3 Требования к управлению функциональной безопасностью\nТребования к управлению \nфункциональной безопасностью Е/Е/РЕ \nСБЗС-систем — по \nГОСТ Р 53195.2—2008 (см. раздел 6).\n5.4 Общие требования к СБЗС ПО\n5.4.1 Основные цели и требования для полного жизненного цикла СБЗС ПО установлены в \nГОСТ Р 53195.2. Дополнительно к ним к СБЗС ПО предъявляются следующие требования.\n5.4.2 Жизненный цикл систем безопасности при разработке ПО должен быть выбран и специфи­\nцирован при планировании безопасности в соответствии с ГОСТ Р 53195.2—2008 (раздел 6). На стадии \n4"
        },
        {
            "page": 10,
            "page_content": "ГОСТ Р 53195.4—2010\nпланирования функциональной безопасности СБЗС ПО (см. блок 1.2 на рисунке 3) должны быть опре­\nделены стратегия поставки, разработки, интеграции, верификации, приемки и модификации ПО в той \nмере, в какой этого требует уровень полноты безопасности Е/Е/РЕ СБЗС-системы.\n5.4.3 При совместном использовании компонентов Е/Е/РЕ СБЗС-систем. имеющих разные уров­\nни полноты безопасности, следует учитывать требования, установленные в 5.6.4.Э.\n5.4.4 Система управления конфигурацией СБЗС ПО должна:\n- использовать административные и технические средства контроля на протяжении всего жизнен­\nного цикла ПО для управления изменениями в программах и гарантирования выполнения указанных в \nспецификациях требований к безопасности СБЗС ПО.\n- гарантировать выполнение всех операций, необходимых для достижения заданной полноты без­\nопасности СБЗС ПО;\n- обеспечивать точную поддержку Е/Е/РЕ СБЗС-систем с использованием уникальной идентифи­\nкации всех элементов конфигурации, необходимых для обеспечения полноты безопасности. Элементы \nконфигурации должны включать в себя, как минимум, следующее:\n- анализ безопасности и требования к безопасности:\n- спецификацию ПО и проектные документы;\n- исходный текст программ:\n- план и результаты тестирования;\n- ранее разработанные программные компоненты и пакеты, которые должны быть включены в \nЕ/Е/РЕ СБЗС-систему;\n- все инструментальные средства и системы разработки, используемые при создании, тестирова­\nнии или выполнении иных действий с СБЗС ПО;\n- использовать процедуры контроля над внесением изменений для предотвращения несанкцио­\nнированных модификаций.\nП р и м е ч а н и е  — Для осуществления руководства и применения административных и технических средств \nконтроля необходимо принятие управленческих решений и наличие полномочий;\n- обеспечивать документирование запросов на выполнение модификаций;\n- обеспечивать анализ влияния предлагаемых модификаций и предусматривать утверждение \nлибо отклонение модификации;\n- обеспечивать подробное документирование модификации и выдачу полномочий на выполнение \nвсех утвержденных модификаций;\n- обеспечивать установление основных параметров конфигурации системы для стадий разработ­\nки СБЗС ПО и документирование результатов тестирования интеграции системы, которое подтвержда­\nет достижение целей стадии (см. 5.8);\n- гарантировать объединение и встраивание всех подсистем ПО (включая переработку более ран­\nних версий);\n- предусматривать документирование перечисленной выше информации для обеспечения воз­\nможности последующего аудита: состояние конфигурации, текущее состояние системы, обоснование и \nутверждение всех модификаций, подробное описание всех модификаций;\n- обеспечивать строгое документирование каждой версии СБЗС ПО. хранение всех версий ПО и \nвсей относящейся к ним документации для обеспечения возможности сопровождения и выполнения \nмодификаций на протяжении всего периода использования разработанного программного продукта.\n5.5 \nТребования к жизненному циклу СБЗС ПО\n5.5.1 Процесс разработки СБЗС ПО должен быть разделен на отдельные стадии, этапы и подпро­\nцессы (см. рисунки 2—5).\n5.5.2 При разработке СБЗС ПО жизненный цикл должен быть выбран и специфицирован при \nпланировании безопасности СБЗС-систем в соответствии с требованиями ГОСТ Р 53195.2—2008 (раз­\nдел 6).\nП р и м е ч а н и е  — Модель жизненного цикла Е/Е/РЕ СБЗС-систем. удовлетворяющая требованиям \nГОСТ Р 53195.2—2008 (раздел 7). может бьпь переработана в соответствии с конкретными потребностями проекта \nили организации.\n5.5.3 Процедуры оценки качества и безопасности СБЗС ПО должны быть интегрированы в про­\nцессы жизненного цикла Е/Е/РЕ СБЗС-систем.\n5"
        },
        {
            "page": 11,
            "page_content": "ГОСТ Р 53195.4—2010\nOr атияи pwnpwpnm ни трвСошннй\nбПт№0Сш ПО С&ЭОСЮТм»! \n(им. ГОСТ P 63106.2-^006.7Л>\nКотвдоы могпувгсщыии ташичкжоге \nобатужммннн Е/Е/РЕ С8ЭСо»ствм \n(ом. ГОСТ Р 631^2-2006,7.16)\nРисунок 2 — Детализация стадии реализации жизненного цикла \nЕ/Е/РЕ СБЗС-систвмы\n5.5.4 Каждая стадия жизненного цикла СБЗС ПО должна быть разделена на элементарные про­\nцессы. Для каждой стадии должны быть определены область применения, входные данные и выходные \nданные.\nП р и м е ч а н и е  — При совместном использовании компонентов Е/Е/РЕ СБЗС-систем. имеющих разные \nуровни полноты безопасности, следует учитывать требования 5.6.4.Э.\n5.5.5 Выходные данные стадии жизненного цикла СБЗС-системы. включая СБЗС ПО. должны со­\nответствовать назначению системы и ПО.\nП р и м е ч а н и е  — В случае относительно простых систем допускается объединение некоторых стадий жиз­\nненного цикла.\n5.5.6 Если жизненный цикл СБЗС ПО удовлетворяет требованиям, приведенным на рисунке 4 и \nв таблице А.1 приложения А. допускается изменять глубину, число и размер этапов и процессов в за­\nвисимости от сложности проекта и требуемой полноты безопасности.\n5.5.7 Для каждой стадии жизненного цикла следует использовать соответствующие методы/сред- \nства. приведенные в приложениях А и Б.\n6"
        },
        {
            "page": 12,
            "page_content": "ГОСТ Р 53195.4—2010\nОготяд9М раачмдапшилтрвОоишй \nСиспеонооту на СБЭС-пмгттшаи \n(СМ. ГОСТ Р 5319fU2-2SOfl, 7Л)\nК СТЙД1М А«СПЛувТШ*1* И 1МПИ1*Г|Г>Л\nоОспушвиия Б1ВРЕ СБЭС-снствм \n(ом. ГОСТ Р 53195.2-2006,7.10)\nРисунок 3 — Детализация стадии реализации жизненного цикла СБЗС ПО\nП р и м е ч а н и е  — Применение методоа'‘средств. выбранных из приложений А и Б. само по себе не гаран­\nтирует достижения необходимой полноты безопасности.\n5.5.8 Результаты процессов жизненного цикла СБЗС ПО должны быть документированы (см. 5.2).\n5.5.9 Если на какой-либо стадии жизненного цикла СБЗС ПО возникает необходимость внесения \nизменений, относящихся к более ранней стадии жизненного цикла, то следует повторно выполнить эту \nстадию и все последующие стадии.\n5.6 \nТребования к обеспечению безопасности ПО\n5.6.1 \nСпецификация требований к безопасности СБЗС ПО (см. блок 1.1 на рисунке 3) разрабаты­\nвается в целях:\n- установления требований к функциям безопасности ПО как требований к функциям безопасно­\nсти и требований к полноте безопасности:\n7"
        },
        {
            "page": 13,
            "page_content": "ГОСТ Р 53195.4—2010\nРисунок 4 — V-модель проектирования и разработки СБЗС ПО\nСенсоры\nПопмюом \nОю и м ы й\nоютямы \nуотровоша\nN Р |\nРЕ\nРЕ\nвади\nР Е  I\nРЕ\nРЕ\nД Я Д И\nI NP L\nfc_PEJ\nЕЧ1П>!|\nРЕ — программируемая электроника NP — непрограммируемое устройство; АС — аппаратное средство;\nПО — программное обеспечение\nСтруктура программируемой электроники\nС труктура аппаратных средств РЕ\nСтруктура программного обеспечения РЕ {структура ПО. включая «зашитое о \nв ПЗУ ПО и прикладные программы)\nБазовые и прикладные АС. напри­\nмер:\n- встроенные устройства диагности­\nческого тестирования:\n- избыточные процессоры:\n- сдвоенные платы ввода/вывода\nПО. «зашитое» в ПЗУ. например:\n- коммуникационные драйверы.\n- программы обработки отказов:\n- исполнительные программы\nПрикладные программы, например:\n- функции ввода/вывода;\n- производные функции (например, \nконтроль сенсора, если он не обес­\nпечен как сервис «зашитого» в ПЗУ \nПО)\n8\nРисунок 5 —  Взаимосвязь между структурами АС и ПО программируемой электроники"
        },
        {
            "page": 14,
            "page_content": "ГОСТ Р 53195.4—2010\n- установления требований к функциям безопасности каждой СБЗС-системы. которые необходи­\nмы для реализации этих функций безопасности:\n- установления требований к полноте безопасности каждой СБЗС-системы, необходимых для до­\nстижения уровня полноты безопасности, назначенного для каждой функции безопасности, реализуе­\nмой этой СБЗС-системой.\n5.6.2 \nТребования\n5.6.2.1 Выполнение требований достигается комбинацией базового встраиваемого ПО и приклад­\nных программных модулей, разработанных специально для конкретного приложения. Точная граница \nмежду базовым и прикладным ПО зависит от выбранной структуры программной системы (см. рису­\nнок 5).\n5.6.2.2 Если требования к безопасности ПО были уже установлены в требованиях к безопасности \nСБЗС-систем (см. ГОСТ Р 53195.3). повторно устанавливать их не следует.\n5.6.2.3 Спецификация требований к безопасности ПО должна быть разработана на основе требо­\nваний к безопасности СБЗС-систем (см. ГОСТ Р 53195.3) и требований к планированию безопасности \n(см. 5.4.2 настоящего стандарта).\nП р и м е ч а н и е  — Спецификация требований к безопасности СБЗС-систем должна быть доступна разра­\nботчикам ПО. Должно быть обеспечено взаимодействие между разработчиками АС и ПО СБЗС-систем.\n5.6.2.4 Степень подробности спецификации требований к безопасности ПО должна быть доста­\nточной для обеспечения стадии проектирования и реализации необходимой информации для дости­\nжения требуемой полноты безопасности и проведения оценки функциональной безопасности. Уровень \nдетализации зависит от сложности проекта и определяется проектировщиком ПО.\n5.6.2.5 Разработчиком ПО должен быть проведен анализ информации, содержащейся в 5.6.2, \nдля гарантирования того, что требования определены адекватным образом. При этом должны быть \nучтены:\n- функции безопасности;\n- конфигурация или структура системы;\n- требования к полноте безопасности АС (РЕ. датчиков и устройств привода);\n- требования к полноте безопасности ПО:\n- производительность и время отклика системы;\n- интерфейсы оборудования и оператора.\n5.6.2.6 Разработчиком ПО должны быть установлены процедуры для устранения разногласий при \nназначении уровня полноты безопасности ПО.\n5.6.27 В степени, необходимой для конкретного уровня полноты безопасности, требования к \nбезопасности ПО должны быть выражены и структурированы так. чтобы они:\n- были ясными, точными, недвусмысленными, пригодными для верификации, тестирования, под­\nдержки и выполнения, а также соразмерными с уровнем полноты безопасности,\n- были пригодными для определения их источника в спецификации требований к безопасности \nСБЗС-систем;\n- не содержали информации и описаний, которые являются двусмысленными и/или могут быть \nне поняты другими пользователями документа на различных стадиях жизненного цикла СБЗС-систем.\n5.6.2.8 \nВ требованиях к безопасности ПО должны быть подробно описаны все соответствующие \nрежимы работы УО. если они не были уже адекватно определены в требованиях к безопасности СБЗС- \nсистем.\n5.6.2.Э \nВ спецификации требований к безопасности ПО должны быть установлены и документи­\nрованы все относящиеся к безопасности и иные необходимые ограничения, связанные с взаимодей­\nствием между АС и ПО.\n5.6.2.10 В спецификации требований к безопасности ПО в степени, требуемой в описании про­\nекта структуры АС СБЗС-системы. должны быть учтены:\n- самоконтроль программного обеспечения;\n- мониторинг РЕ. аппаратуры, датчиков и устройств привода;\n- периодическое тестирование функций безопасности во время выполнения программы;\n- разрешение тестирования функций безопасности во время работы УО.\n5.6.2.11 Если СБЗС-система должна выполнять функции, не относящиеся к безопасности, эти \nфункции должны быть четко указаны в спецификации требований к безопасности ПО.\n9"
        },
        {
            "page": 15,
            "page_content": "ГОСТ Р 53195.4—2010\n5.6.2.12 \nСпецификация требований к безопасности ПО должна содержать необходимые характе­\nристики безопасности продукции, а не проекта. С учетом 5.6.2.2—5.6.2.11 в зависимости от конкретных \nобстоятельств должны быть установлены следующие положения:\nа) требования к функциям безопасности ПО:\n- функции, обеспечивающие достижение и поддержание безопасного состояния УО;\n- функции, связанные с обнаружением, оповещением и обработкой ошибок АС РЕ:\n- функции, связанные с обнаружением, оповещением и обработкой ошибок датчиков и устройств \nпривода,\n- функции, связанные с обнаружением, оповещением и обработкой ошибок в самом ПО (само­\nконтроль ПО);\n- функции, связанные с периодичесхим тестированием функций в режиме реального времени:\n- функции, связанные с периодическим тестированием функций в автономном режиме;\n- функции, обеспечивающие безопасную модификацию СБЗС-систем;\n- интерфейсы функций, не связанных с безопасностью;\n* емкость системы и диапазон временных характеристик;\n- интерфейсы между ПО и РЕ СБЗС-системами.\nП р и м е ч а н и е  —  Интерфейсы должны содержать средства автономного программирования и программи­\nрования с внешнего устройства (онлайн):\nб) требования к полноте безопасности ПО:\n- уровни полноты безопасности для каждой функции, приведенной в перечислении а).\n5.6.3 Планирование подтверждения соответствия (см. блок 1.2 на рисунке 3)\n5.6.3.1 В ходе планирования подтверждения соответствия должны быть установлены процедур­\nные и технические шаги, используемые для демонстрации того, что СБЗС ПО удовлетворяет требова­\nниям безопасности (см. 5.6.2).\nП р и м е ч а н и я\n1 В зависимости от состава и сложности полной СБЗС-системы возможны варианты осуществления под­\nтверждения соответствия ПО: подтверждение соответствия ПО отдельных РЕ СБЗС-систем (подсистем) до обь- \nединения их в комплексную систему безопасности: оценка соответствия ПО отдельных РЕ СБЗС-систем (подси­\nстем) в составе комплексной системы безопасности: оценка соответствия ПО комплексной системы безопасности.\n2 Выбор варианта осуществления подтверждения соответствия ПО РЕ СБЗС-систем (подсистем) или их \nкомбинации определяется разработчиком ПО.\n5.6.3.2 План подтверждения соответствия безопасности ПО должен содержать следующую ин­\nформацию:\nа) описание этапов подтверждения соответствия;\nб) перечень лиц. осуществляющих подтверждение соответствия;\nв) идентификацию соответствующих режимов работы УО, включая:\n- подготовку к использованию, а также установку и настройку;\n- работу в режиме запуска и обучения, в автоматическом, ручном, полуавтоматическом и стацио­\nнарном режимах;\n- переустановку, выключение, сопровождение;\n- предполагаемые ненормальные режимы;\nг) идентификацию СБЗС ПО, для которого должна быть проведена процедура подтверждения со­\nответствия для каждого режима работы УО до момента его ввода в эксплуатацию;\nд) техническую стратегию, применяемую для подтверждения соответствия (например, имитация/ \nмоделирование, вероятностное тестирование и т. п.) (см. таблицу А.7 приложения А);\nе) методы/средства и процедуры в соответствии с перечислением д). которые должны быть ис­\nпользованы для подтверждения каждой функции требованиям к функциям безопасности ПО и требова­\nниям к полноте безопасности ПО (см. 5.6.4);\nж) конкретные ссылки на требования к безопасности ПО (см. 5.6.4):\nи) условия, в которых должны происходить процедуры подтверждения соответствия (например, \nпри тестировании может потребоваться использование калиброванных инструментов и оборудования);\nк) критерии соответствия/несоответствия при процедуре подтверждения соответствия (см. 5.6.3.4);\nл) методы и процедуры, используемые для оценки результатов подтверждения соответствия, в \nчастности при оценке отказов.\n10"
        },
        {
            "page": 16,
            "page_content": "ГОСТ Р 53195.4—2010\n5.6.3.3 В рамках процедуры подтверждения соответствия СБЗС ПО. если этого требует уровень \nполноты безопасности (см. ГОСТ Р 53195.2—2008. 7.15 и ГОСТ Р 53195.3—2015. 5.16.2), область при­\nменения и содержание планирования подтверждения соответствия безопасности ПО должны быть из­\nучены экспертом или третьей стороной, представляющей эксперта. Эта процедура должна также вклю­\nчать в себя заявление о присутствии эксперта при испытаниях.\n5.6.3.4 Критерии прохождения/непрохождения при завершении подтверждения соответствия ПО \nдолжны включать в себя:\n- необходимые входные сигналы, включая их последовательность и значения:\n- предполагаемые выходные сигналы, включая их последовательность и значения;\n- другие критерии приемки, например использование памяти, хронометраж, допустимые интерва­\nлы для значений.\n5.6.4 Проектирование и разработка ПО (см. блок 1.3 на рисунке 3)\n5.6.4.1 На стадии проектирования и разработки СБЗС ПО должны быть:\n- создана структура ПО, удовлетворяющая требованиям к безопасности ПО. относящаяся к не­\nобходимому уровню полноты безопасности;\n- проведен анализ и оценка требований, предъявляемых к ПО. обусловленных АС СБЗС-системы, \nс учетом степени взаимодействия между АС и ПО СБЗС-системы для обеспечения безопасной работы \nУО.\n- проведен выбор инструментальных средств, включая языки программирования и компиляторы, \nсоответствующие заданному уровню полноты безопасности на протяжении всего жизненного цикла \nСБЗС-системы и способствующие выполнению процессов верификации, оценке, подтверждению со­\nответствия и модификации ПО;\n- спроектировано и реализовано ПО, удовлетворяющее установленным требованиям к безопас­\nности ПО в соответствии с необходимым уровнем полноты безопасности, пригодное для анализа, вери­\nфикации и способное к безопасной модификации;\n- проведена проверка выполнения требований к безопасности ПО в отношении необходимых \nфункций безопасности и полноты безопасности ПО.\nП р и м е ч а н и е  — Метсщьи'средства. рекомендуемые для проектирования и разработки ПО. приведены в \nтаблице А. 1 приложения А.\n5.6.4.2 В зависимости от характера процесса разработки ПО ответственность за выполнение тре­\nбований 5.6.4 может быть возложена на поставщика ПО. на пользователя или на обе стороны. Распре­\nделение ответственности должно быть определено во время планирования безопасности (см. 5.6.3).\n5.6.4.3 В соответствии с требуемым уровнем полноты безопасности выбранный метод проектиро­\nвания должен обладать характеристиками, которые облегчают.\n- абстракцию, разделение на модули и другие характеристики, контролирующие уровень \nсложности;\n- выражение:\n- выполняемых функций;\n- обмена данными между компонентами;\n- информации, относящейся к последовательности и времени выполнения;\n- ограничений на время выполнения;\n- параллельного выполнения;\n- структур данных и их свойств;\n- проектных предположений и их зависимостей;\n- понимание документации разработчиками и другими лицами, которые должны иметь дело с \nпроектом;\n- верификацию и оценку соответствия.\n5.6.4.4 На стадии проектирования должны быть предусмотрены тестируемость и способность к \nбезопасной модификации ПО для облегчения реализации этих возможностей в окончательной версии \nСБЗС-системы.\n5.6.4.5 Выбранный метод проектирования должен обладать характеристиками, которые облег­\nчают модификацию программного обеспечения. К числу таких характеристик относятся модульность, \nскрытие информации и инкапсуляция.\n5.6.4.6 Представление проекта должно основываться на однозначно определенной или ограни­\nченной до однозначно определенных свойств нотации.\n11"
        },
        {
            "page": 17,
            "page_content": "ГОСТ Р 53195.4—2010\n5.6.47 В проекте должна быть минимизирована, насколько это возможно, та часть ПО. которая \nотносится к безопасности.\n5.6.4.8 Если ПО должно реализовать функции как относящиеся, так и не относящиеся к безопас­\nности. оно в целом должно рассматриваться как относящееся к безопасности, если только в проекте не \nпродемонстрирована достаточная независимость между этими функциями. Обоснование независимо­\nсти должно быть документировано.\n5.6.4.9 Если программное обеспечение должно реализовать функции безопасности, имеющие \nразличный уровень полноты безопасности, то следует считать, что все ПО имеет наивысший уровень \nиз этих уровней безопасности, если только в проекте не будет продемонстрирована достаточная неза­\nвисимость функций, имеющих различный уровень полноты безопасности. Обоснование независимости \nдолжно быть документировано.\n5.6.4.10 Уровень полноты безопасности ПО должен быть не ниже, чем уровень полноты функции \nбезопасности, к которой оно относится.\nП р и м е ч а н и е  — Уровень полноты безопасности компонента ПО может быть ниже, чем уровень полноты \nфункции безопасности, к которой он относится, если этот компонент используется в сочетании с другими компонен­\nтами АС, такими, что уровень полноты безопасности сочетания компонентов не меньше уровня полноты безопас­\nности функции безопасности.\n5.6.4.11 В состав проекта по мере возможности должны быть включены функции, выполняющие \nпроверки и все диагностические тесты для обеспечения выполнения требований к полноте безопасно­\nсти СБЗС-системы (как установлено в ГОСТ 53195.3).\n5.6.4.12 В состав проекта по мере возможности должны быть включены средства самоконтроля \nпотоков управления и потоков данных, адекватные требуемому уровню полноты безопасности. При \nобнаружении ошибки должны быть выполнены соответствующие действия (см. таблицы А.2 и А.4 при­\nложения А).\n5.6.4.13 Если стандартное или ранее разработанное программное обеспечение должно исполь­\nзоваться как часть проекта (см. таблицы А.2 и А.4 приложения А), оно должно быть четко идентифи­\nцировано. Способность программного обеспечения удовлетворять требованиям, изложенным в спе­\nцификации требований к безопасности СБЗС ПО (см. 5.6), должна быть обоснована. Обоснование этой \nспособности должно быть подкреплено данными по удовлетворительной работе ПО в схожем приложе­\nнии или быть предметом тех же самых процедур верификации и подтверждения соответствия, которые \nподразумеваются для любого вновь разрабатываемого ПО. При этом должны быть оценены ограниче­\nния. связанные с условиями, в которых работало ПО (например, зависимость от операционной систе­\nмы и компилятора).\nП р и м е ч а н и е  —  Такое обоснование может быть разработано при планировании безопасности (см. 5.4).\n5.6.4.14 Подраздел 5.6.4 должен по мере возможности применяться к данным, включая любой \nязык генерации данных.\n5.6.5 Требования к структуре ПО\n5.6.5.1 Структура ПО должна определять основные компоненты и подсистемы ПО. их взаимо­\nсвязь. способ реализации необходимых характеристик, в том числе полноты безопасности.\nП р и м е ч а н и я\n1 Примерами компонентов ПО являются операционные системы, базы данных, коммуникационные подси­\nстемы. прикладные программы, инструментальные средства программирования и диагностики и т. п.\n2 С точки зрения безопасности стадия разработки структуры программного обеспечения соответствует пери­\nоду разработки базовой стратегии безопасности для ПО.\n5.6.5.2 В зависимости от характера разработки ПО ответственность за выполнение требова­\nний 5.6.5 может быть возложена только на поставщика, только на разработчика или на обе стороны. \nРаспределение ответственности определяется разработчиком и должно быть документировано во вре­\nмя планирования безопасности (см. 5.4).\nП р и м е ч а н и я\n1 \nДля пользовательского прикладного программирования в языках с ограниченной изменчивостью, в част­\nности в языках, используемых в ПЛК. структура определяется поставщиком как стандартная характеристика ПЛК. \nОднако в рамках настоящего стандарта к поставщику может быть предъявлено требование гарантировать поль­\nзователю соответствие поставляемого продукта требованиям 5.6.4. В этом случае пользователь приспосабливает \nПЛК. используя стандартные возможности программирования, например многозвенные логические схемы. При\n12"
        },
        {
            "page": 18,
            "page_content": "ГОСТ Р 53195.4—2010\nэтом требования 5.6.5—5.6.11 сохраняют свою силу. Требование определения и документирования структуры мо­\nжет рассматриваться как информация, которую пользователь может использовать при выборе ПЛК (или эквива­\nлентного ему устройства), для приложения.\n2 В другом крайнем случае в некоторых встроенных приложениях, использующих язык с полной изменчиво­\nстью. например в устройствах биометрической идентификации системы контроля и управления доступом, управ­\nляемых микропроцессором, структура должна создаваться поставщиком специально для приложения (или класса \nприложений). Пользователь обычно не имеет инструментария для программирования. В этих условиях ответствен­\nность за обеспечение соответствия по 5.4 ложится на поставщика.\n3 Имеются системы, попадающие в промежуток между типами, упомянутыми в примечаниях 1 и 2, в таких \nслучаях ответственность за соответствие разделяется между пользователем и поставщиком.\n5.6.5.3 Разрабатываемый проект структуры ПО должен быть создан поставщиком и/или разра­\nботчиком ПО. Описание структуры должно быть по дробным. Описание должно:\n- содержать выбор и обоснование интегрированного набора методов/средств. которые будут \nнеобходимы в течение жизненного цикла модулей безопасности для удовлетворения требований к \nбезопасности ПО на заданном уровне полноты безопасности (см. 5.5). Эти методы/средства включают \nв свой состав стратегию проектирования ПО для обеспечения устойчивости к отказам (совместимую с \nаппаратными средствами) и для избегания отказов, в том число (при необходимости) могут включать в \nсвой состав избыточность и разнообразие:\n- основываться на разделении на компоненты/подсистемы. для каждой из которых должна быть \nпредоставлена следующая информация:\n- являются ли они вновь разработанными, уже существующими или находящимися в частной\nсобственности.\n- проводилась ли верификация, и если проводилась, то при каких условиях;\n- связан ли каждый из этих компонентов/подсистем с безопасностью;\n- каков уровень полноты безопасности для компонента/подсистемы:\n- определять все взаимодействия между ПО и АС СБЗС-системы. а также оценивать и детализи­\nровать их значения;\n- использовать для представления структуры нотацию, однозначно определенную или ограничен­\nную до подмножества однозначно определенных характеристик;\n- содержать набор проектных характеристик, которые должны использоваться для поддержания \nполноты безопасности всех данных. В число таких данных допускается включать входные и выходные \nданные процесса, коммуникационные данные, данные интерфейса оператора, данные сопровождения \nи данные, хранящиеся во внутренних базах данных:\n- определять тесты интеграции структуры ПО для обеспечения выполнения требований, изло­\nженных в спецификации требований к безопасности ПО. на заданном уровне полноты безопасности \n(см. 5.5).\nП р и м е ч а н и е  — Методы/средства. рекомендуемые для применения при проектировании структуры ПО, \nприведены в таблице А 2  приложения А и таблице Б.7 приложения Б.\n5.6.5.4 Любые изменения, которые может потребоваться внести в специфицированные требова­\nния к СБЗС-системе после использования мероприятий 5.6.5, должны быть согласованы с разработчи­\nком СБЗС-систем и документированы.\nП р и м е ч а н и е  — Итерационное взаимодействие между структурой АС и ПО является неизбежным (см. ри­\nсунок 4). Взаимодействие разработчика ПО с разработчиком АС при рассмотрении спецификации тестирования \nинтеграции РЕ и ПО является обязательным условием процесса разработки СБЗС ПО (см. 5.6.11).\n5.6.5.5 Структура ПО комплексных СБЗС-систем должна иметь многоуровневую (двух- или трех­\nуровневую) распределенную архитектуру.\n5.6.5.6 ПО автоматизированного рабочего места (далее — АРМ) не должно выполнять функ­\nции хранения базы данных системы и непосредственного взаимодействия с УО оборудования СБЗС- \nпод систем.\n5.6.5.7 В структуре ПО комплексных СБЗС-систем должны быть предусмотрены отдельные \nпрограммные модули, реализующие непосредственное взаимодействие с УО оборудования СБЗС- \nподсистем.\n5.6.5.8 Протоколы взаимодействия программными модулями и остальной частью СБЗС ПО долж­\nны быть, по возможности, открытыми, документированными и должны поставляться вместе с ПО для\n13"
        },
        {
            "page": 19,
            "page_content": "ГОСТ Р 53195.4—2010\nобеспечения возможности дальнейшего наращивания перечня УО в ходе модификации без изменения \nобщей структуры СБЗС ПО.\n5.6.5.Э \nВ структуре СБЗС ПО должны быть предусмотрены возможность переключения на из­\nбыточный (резервный) компонент СБЗС-системы (сервер, технологический компьютер, линию связи, \nисточник электропитания и т. п.) в случае отказа основного компонента, а также возможность автомати­\nческого переключения на прежний компонент при восстановлении его работоспособности.\n5.6.5.10 В структуре ПО комплексной СБЗС-системы должна быть предусмотрена возможность \nподдержки работы в многосерверной среде, в том числе с поддержкой «горячего» резервирования сер­\nверов и синхронизации информационной базы данных между серверами, а также автоматической син­\nхронизации времени во всех компонентах.\n5.6.5.11 В структуре ПО комплексной СБЗС-системы должна быть предусмотрена возможность \nавтоматической посылки управляющего воздействия и выполнения управляющих воздействий при воз­\nникновении любого события в любой подсистеме СБЗС-системы.\n5.6.5.12 В структуре СБЗС ПО должна быть предусмотрена возможность поддержания удаленно­\nго контроля и тестирования АС и ПО СБЗС-систем и их составляющих.\n5.6.6 Требования к инструментальным средствам поддержки и языкам программирования\n5.6.6.1 Выбор инструментов для разработки ПО определяется разработчиком в зависимости от \nхарактера процессов разработки ПО и его структуры (см. 5.6.5).\n5.6.6.2 В зависимости от характера ПО ответственность за выполнение требований 5.6.6 может \nбыть возложена только на поставщика, только на пользователя (разработчика СБЗС ПО) или на обе \nстороны. Разделение ответственности должно быть документировано во время планирования безопас­\nности (см. 5.6.3).\nП р и м е ч а н и я\n1 Если пользовательское прикладное ПО выполняется на языке с ограниченной варьируемостью при низких \nуровнях полноты безопасности, то круг необходимых инструментов и языков программирования может быть огра­\nничен стандартными языками ПЛК. редакторами и загрузчиками. В этом случае ответственность за выполнение \nтребований 5.6.6 возлагается, главным образом, на поставщика.\n2 При более высоких уровнях полноты безопасности могут потребоваться ограниченные подмножества язы­\nка ПЛК, а также средства верификации и отладки, такие как анализаторы кода и имитаторы. В этих условиях от­\nветственность возлагается на поставщика и на пользователя.\n3 Инструментарий для встраиваемых приложений, использующий языки с полной варьируемостью. должен \nбыть более разнообразным даже в случае низких уровней полноты безопасности. Ответственность за выполнение \nтребований 5.6.6 возлагается, главным образом, на разработчиков ПО. Ответственность несет также поставщик \nПЛК. который может использовать языки с полной варьируемостью в языке с низким уровнем варьируемости для \nобеспечения пользовательского прикладного программирования.\n5.6.6.3 Набор интегрированных инструментальных средств должен выбираться в соответствии \nс требуемым уровнем полноты безопасности и должен включать в свой состав языки программирова­\nния, компиляторы, средства управления конфигурацией и, при необходимости, автоматизированные \nсредства тестирования. При выборе инструментальных средств (за исключением тех средств, которые \nиспользовались при первоначальной разработке системы) должна быть учтена их способность выпол­\nнять необходимые задачи на протяжении всего жизненного цикла СБЗС-систем.\n5.6.6.4 В степени, необходимой для требуемого уровня полноты безопасности, выбранные языки \nпрограммирования должны:\n- иметь транслятор/компилятор. сертифицированный на соответствие национальному или между­\nнародному стандарту либо оцененный на пригодность его для применения;\n- быть полностью и однозначно определенными либо ограниченными до подмножества однознач­\nно определяемых элементов;\n- соответствовать характеристикам приложения;\n- обладать свойствами, облегчающими обнаружение ошибок программирования;\n- поддерживать характеристики, соответствующие методу проектирования.\nП р и м е ч а н и е  — Инструментальные средства поддержки, а также языки программирования, рекомендо­\nванные к применению, приведены в таблице А.З приложения А и таблице Б.З приложения Б.\n5.6.6.5 Если требования 5.6.6.4 не могут быть выполнены, то при описании проекта структуры ПО \n(см. 5.6.5) следует документировать обоснование использования альтернативного языка программиро­\nвания. В обосновании должны быть подробно рассмотрены пригодность языка программирования, а \nтакже применяемые дополнительные меры, обусловленные известными недостатками языка.\n14"
        },
        {
            "page": 20,
            "page_content": "ГОСТ Р 53195.4—2010\n5.6.6.6 \nСтандарты программирования (составления программ), используемые при разработке \nвсего СБЗС ПО. должны быть рассмотрены экспертом на предмет определения их пригодности.\n5.6.67 Стандарты программирования должны определять правильные методы программирова­\nния. запрещать использование небезопасных возможностей языка программирования (например, не­\nопределенных особенностей языка, неструктурированных конструкций и т. п.) и определять процедуры \nдля документирования исходного текста.\nДокументация, относящаяся к исходному тексту, должна содержать, по меньшей мере, следую­\nщую информацию:\n- наименование (имя) юридического лица (например, компании, авторов и т. п.);\n- описание;\n- входные и выходные данные;\n- историю управления конфигурацией ПО.\n5.6.7 Требования к детальному проектированию и разработке\n5.6.7.1 Под детальным проектированием здесь понимается разделение основных компонентов \nструктуры на систему программных модулей, проектирование отдельных программных модулей и их \nпрограммирование. В небольших приложениях проектирование программных систем и структуры могут \nбыть объединены.\n5.67.2 Допускается изменение характера детального проектирования и разработки в зависимо­\nсти от характера процессов разработки программ и структуры ПО (см. 5.6.2).\nП р и м е ч а н и я\n1 При осуществлении прикладного программирования пользователем, применяющим языки с ограниченной \nварьируемостью, например языки многозвенных логических схем и языки функциональных блоков, детальное про­\nектирование может рассматриваться скорее как конфигурирование, чем как программирование.\n2 В ходе детального проектирования целесообразно применять приемы «установившейся практики», напри­\nмер:\n- структурирование программного обеспечения, включая организацию модульной структуры, которая выде­\nляет (настолько, насколько это возможно) блоки, связанные с безопасностью:\n- использование проверок на попадание в интервал допустимых значений и других возможностей защиты от \nошибок при вводе исходных данных;\n- использование ранее верифицированных программных модулей;\n- применение конструкций, которые облегчают выполнение будущих модификаций ПО.\n3 Методы/средства. рекомендуемые при детальном проектировании ПО. приведены в таблице А.4 приложе­\nния А и таблицах Б.1. Б.7 и Б.9 приложения Б.\n5.67.3 В зависимости от характера ПО ответственность за выполнение требований 5.6.7 может \nбыть возложена только на поставщика, только на пользователя или на обе стороны. Разделение ответ­\nственности должно быть документировано во время планирования безопасности (см. 5.5.2).\n5.67.4 Для начала детального проектирования должна быть использована следующая информация;\n- спецификация требований к безопасности ПО (см. 5.6.2);\n- описание проекта структуры (см. 5.6.5.3);\n- план подтверждения соответствия ПО требованиям безопасности (см. 5.7.3).\n5.67.5 Разработка ПО должна осуществляться таким образом, чтобы обеспечивались модуль­\nность. тестируемость и способность к безопасной модификации ПО.\n5.67.6 Дальнейшее уточнение проекта для каждого главного компонента/подсистемы в описании \nпроекта структуры ПО (см. 5.6.5.3) должно быть основано на разделении ПО на программные модули \n(т. е. на спецификации проекта программной системы). Должны быть разработаны каждый программ­\nный модуль и тесты, которые необходимо использовать для проверки этих модулей.\nП р и м е ч а н и е  — Для стандартных или ранее разработанных компонентов программных модулей не тре­\nбуются проект или спецификации тестирования, если может быть показано, что они удовлетворяют требованиям \n5.6.4.11.\n5.6.77 Должны быть установлены соответствующие тесты интеграции программных систем для \nудостоверения того, что программные системы удовлетворяют требованиям к безопасности ПО для \nустановленного уровня полноты безопасности (см. 5.4).\n5.6.8 Требования к реализации исходных текстов программ\n5.6.8.1 Исходные тексты программ должны:\n- быть читаемыми, понятными и пригодными к тестированию;\n- удовлетворять установленным требованиям к программным модулям (см. 5.6.7);\n15"
        },
        {
            "page": 21,
            "page_content": "ГОСТ Р 53195.4—2010\n- удовлетворять установленным требованиям к стандартам программирования:\n- удовлетворять всем требованиям, установленным при планировании безопасности (см. 5.4.2).\n5.6.8.2 Каждый модуль должен быть просмотрен.\nП р и и  е ч а н и я\n1 Просмотр модуля относится к процессам верификации.\n2 Методы/средства. рекомендуемые при подготовке текстов программ, приведены в таблице А.4 приложе­\nния А й в  таблицах Б.1. Б.7 и Б.9 приложения Б.\n5.6.9 Требования к тестированию программных модулей\n5.6.9.1 Тестирование программных модулей следует проводить в сочетании с просмотром исход­\nных текстов для удостоверения в том, что программный модуль корректно выполняет все требования, \nсодержащиеся в спецификации тестирования и в спецификации модуля, что эквивалентно верифика­\nции модуля.\n5.6.3.2 Каждый программный модуль должен быть протестирован в соответствии со специфика­\nцией. разработанной при детальном проектировании ПО (см. 5.6.7).\n5.6.9.3 Тестирование должно продемонстрировать, что каждый программный модуль выполняет \nфункции, для которых он предназначен, и не выполняет не предусмотренные для него функции.\nП р и м е ч а н и я\n1 Тестирование программных модулей не означает тестирование всех комбинаций входных данных и всех \nкомбинаций выходных данных. Достаточным может быть тестирование всех классов эквивалентности или струк­\nтурное тестирование. Анализ граничных значений, анализ управляющей логики или анализ скрытых путей вы­\nполнения программы может уменьшить количество проверок до приемлемого уровня. Программы, пригодные для \nанализа, могут позволить достичь более быстрого выполнения требований.\n2 Если при разработке используются формальные методы, формальные доказательства или операторы \nпроверки условий, область применения подобных проверок может быть уменьшена.\n3 Допускается использовать также статистические данные.\n4 Методы/средства. рекомендуемые для тестирования программных модулей, приведены в таблице А.5 \nприложения А й в  таблицах Б.2. Б.З и Б.6 приложения Б.\n5.6.3.4 Результаты тестирования программных модулей следует документировать.\n5.6.3.5 Должны быть установлены процедуры для коррекции при непрохождении теста.\n5.6.10 Требования к тестированию интеграции ПО\n5.6.10.1 Тесты интеграции ПО должны быть разработаны параллельно с разработкой ПО на ста­\nдии проектирования и разработки СБЗС ПО.\n5.6.10.2 Спецификации тестов интеграции ПО должны устанавливать:\n- разделение ПО на контролируемые интегрируемые подмножества:\n- контрольные примеры и контрольные данные;\n- типы проверок, которые должны быть выполнены;\n- условия тестирования, используемые инструменты, конфигурацию и программы;\n- критерии, на основании которых выносится решение о прохождении теста;\n- процедуры, которые необходимо выполнить, если тестирование дало отрицательный результат.\n5.6.10.3 ПО должно быть протестировано в соответствии с заранее определенными тестами ин­\nтеграции программ. Тестирование должно продемонстрировать, что все программные модули и про­\nграммные компоненты/подсистемы корректно взаимодействуют для выполнения функций, для которых \nони предназначены, и не выполняют непредусмотренных функций.\nП р и м е ч а н и я\n1 Тестирование программных модулей не означает тестирование всех комбинаций входных данных и всех \nкомбинаций выходных данных. Достаточным может быть тестирование всех классов эквивалентности или струк­\nтурное тестирование. Анализ граничных значений, анализ управляющей логики или анализ скрытых путей вы­\nполнения программы может уменьшить количество проверок до приемлемого уровня. Программы, пригодные для \nанализа, могут позволить достичь более быстрого выполнения требований.\n2 Если при разработке используются формальные методы, формальные доказательства или операторы \nпроверки условий, область применения подобных проверок может быть уменьшена.\n3 Допускается использовать также статистические данные.\n4 Методы/средства. рекомендуемые для тестирования при интеграции, приведены в таблице А.5 приложе­\nния А и таблицах Б.2. Б.З и Б.6 приложения Б.\n5.6.10.4 Результаты тестирования интеграции ПО должны быть документированы. В документа­\nции должны быть сформулированы результаты тестирования и должно быть указано, были ли выпол- \n16"
        },
        {
            "page": 22,
            "page_content": "ГОСТ Р 53195.4—2010\nйены цели и критерии проверки. При неудачных результатах тестирования должны быть описаны при­\nчины этого.\n5.6.10.5 \nПри интеграции ПО все модификации или изменения должны быть объектом анализа \nвлияния, который позволяет определить, какие программные модули затрагиваются изменениями, и \nустановить необходимость повторной верификации и проектирования.\n5.6.11 Интеграция программируемой электроники (АС и ПО) (см. блок 1.4 на рисунке 3)\n5.6.11.1 При интеграции программируемой электроники осуществляются интеграция ПО в пред­\nусмотренные АС. объединение АС и ПО в РЕ СБЗС-систему (подсистему), а также проверка для удо­\nстоверения их совместимости и того, что выполняются требования достижения необходимого уровня \nполноты безопасности.\n5.6.11.2 Тесты интеграции должны быть определены на стадии проектирования и разработки в \nцелях проверки совместимости ПО и АС в связанной с безопасностью РЕ СБЗС-системе (подсистеме).\n5.6.11.3 Спецификация тестирования интеграции программируемой электроники должна уста­\nнавливать:\n- разделение ПО на контролируемые интегрируемые подмножества;\n- контрольные примеры и контрольные данные;\n- типы проверок, которые должны быть выполнены.\n- условия тестирования, используемые инструменты, конфигурацию и программы;\n- критерии, на основании которых выносится решение о прохождении теста;\n- процедуры, которые необходимо выполнить, если тестирование дало отрицательный результат.\n5.6.11.4 Специфицированные тесты интеграции программируемой электроники (АС и ПО) долж­\nны быть различными для операций, которые выполняются разработчиком на его оборудовании, и опе­\nраций. требующих доступа к оборудованию пользователя.\n5.6.11.5 Тесты интеграции программируемой электроники (АС и ПО) должны быть различными \nдля следующих процессов:\nа) загрузки ПО в целевое программируемое электронное оборудование;\nб) интеграции ЕУЕ/РЕ-устройств. т. е. добавления интерфейсов, таких как датчики и устройства \nпривода;\nв) полной интеграции УО и Е/Е/РЕ СБЗС-системы (подсистемы).\nП р и м е ч а н и е  — Перечисления б) и а) охватываются ГОСТ Р 53195.1 — ГОСТ Р 53195.3.\n5.6.11.6 ПО должно быть интегрировано с АС программируемой электроники в соответствии со \nспецифицированными тестами интеграции для РЕ (АС и ПО).\n5.6.11.7 При тестировании интеграции СБЗС программируемой электроники (АС и ПО) все моди­\nфикации или изменения должны быть объектом анализа влияния, в результате которого необходимо \nопределить, какие программные модули затрагиваются изменениями, и установить необходимость по­\nвторной верификации.\nП р и м е ч а н и е  — Рекомендуемые методы|’средства. применяемые при осуществлении интеграции, при­\nведены в таблице А.6 приложения А и таблицах Б.З. Б.6 приложения Б.\n5.6.11.8 Тестовые примеры и результаты их выполнения должны быть документированы для по­\nследующего анализа.\n5.6.11.9 Результаты тестирования интеграции программируемой электроники (АС и ПО) должны \nбыть документированы. В документации должны быть сформулированы результаты тестирования, а \nтакже указано, были ли выполнены цели и критерии проверки. Если тестирование окончилось неудач­\nно. должны быть описаны причины этого.\n5.6.12 Интеграция \nСБЗС-систем \n(подсистем) \nв комплексную систему \nбезопасности\n(см. блок 1.7 на рисунке 3)\n5.6.12.1 \nПри интеграции отдельных ЕУЕ/РЕ СБЗС-систем (подсистем) в комплексную систему без­\nопасности осуществляют интеграцию ПО в предусмотренные АС. объединение СБЗС-систем (подси­\nстем) в комплексную систему безопасности, тестирование интеграции для удостоверения в их совме­\nстимости в том. что для каждой из СБЗС-систем (подсистем) выполняются необходимые требования к \nуровню полноты безопасности, а также выполняются требования к функциям безопасности комплекс­\nной системы безопасности.\n17"
        },
        {
            "page": 23,
            "page_content": "ГОСТ Р 53195.4—2010\nП р и м е ч а н и е  — В зависимости от состава, сложности СБЗС-систем и сложности проекта проектировщи­\nком ПО могут быть выбраны различные варианты интеграции СБЗС-систем (подсистем) в комплексную систему \nбезопасности и тестирования интеграции:\n- автономная интеграция ПО и АС каждой из СБЗС-систем (подсистем), тестирование интеграции до объеди­\nнения СБЗС-систем (подсистем) в комплексную систему безопасности и последующие интеграция и тестирование \nинтеграции при объединении СБЗС-систем (подсистем) в комплексную систему безопасности;\n- интеграция ПО и АС СБЗС-систем (подсистем) в составе комплексной системы безопасности после объ­\nединения АС СБЗС-систем (подсистем) в комплексную систему безопасности:\n- комбинация перечисленных выше двух вариантов.\n5.6.12.2 Варианты интеграции и тесты интеграции комплексной системы безопасности должны \nбыть определены на стадии проектирования и разработки СБЗС ПО.\n5.6.12.3 Спецификация тестирования интеграции СБЗС-систем (подситем) в комплексную систе­\nму безопасности должна устанавливать:\n- разделение ПО на контролируемые интегрируемые подмножества:\n- контрольные примеры и контрольные данные;\n- типы проверок, которые должны быть выполнены;\n- условия тестирования, используемые инструменты, конфигурацию и программы;\n- критерии, на основании которых выносится решение о прохождении теста;\n- процедуры, которые необходимо выполнить, если тестирование дало отрицательный результат.\n5.6.12.4 Тесты интеграции СБЗС-систем (подсистем) должны быть различными для операций, \nкоторые выполняются разработчиком на его оборудовании, и операций, требующих доступа к оборудо­\nванию пользователя.\n5.6.12.5 Тесты интеграции СБЗС-систем (подсистем) должны быть различными для следующих \nпроцессов;\nа) загрузки ПО в предназначенное программируемое электронное оборудование:\nб) интеграции ПО и АС и расширения СБЗС-систем (подсистем) путем добавления новых средств \nконтроля и управления,\nв) интеграции УО и Е/Е/РЕ СБЗС-систем (подсистем):\nг) интеграции СБЗС-систем (подсистем) в комплексную систему безопасности.\nП р и м е ч а н и е  — Перечисления б) и г) охватываются ГОСТ Р 53195.1—ГОСТ Р 53195.3.\n5.6.12.6 ПО должно быть интегрировано с программируемой электроникой АС СБЗС-систем (под­\nсистем) в соответствии с определенными на стадии проектирования вариантами интеграции и тестами \nинтеграции СБЗС-систем (подсистем).\n5.6.12.7 При тестировании интеграции СБЗС-систем (подсистем) все модификации или измене­\nния должны быть объектом анализа влияния, в результате которого следует определить, какие состав­\nляющие ПО затрагиваются изменениями, и установить необходимость их повторной верификации.\n5.6.12.8 Тестовые примеры и результаты их выполнения должны быть документированы для по­\nследующего анализа.\n5.6.12.9 Результаты тестирования интеграции СБЗС-систем (подсистем) должны быть докумен­\nтированы. В документации должны быть сформулированы результаты тестирования, а также указано, \nбыли ли выполнены цели и критерии проверки. Если тестирование окончилось неудачно, должны быть \nописаны причины этого.\n5.7 \nВвод в действие, эксплуатация и модификация ПО\n5.7.1 Проектировщиком ПО должны быть разработаны процедуры установки, ввода в действие, \nэксплуатации и модификации СБЗС ПО (см. блок 1.6 на рисунке 3). обеспечивающие сохранение уста­\nновленной проектом функциональной безопасности СБЗС-систем при работе и модификациях ПО в \nпериод эксплуатации.\n5.7.2 СБЗС-система может быть введена в эксплуатацию только после подтверждения соответ­\nствия АС и ПО требованиям безопасности.\n5.7.3 Подтверждение соответствия ПО требованиям безопасности (см. блоки 1.5 и 1.8 на\nрисунке 3)\n5.7.3.1 \nЕсли соответствие требованиям к безопасности ПО уже было установлено для СБЗС- \nсистемы (ГОСТ Р 53195.2—2008. 7.8 и 7.15). проведение повторного подтверждения соответствия не \nтребуется.\n18"
        },
        {
            "page": 24,
            "page_content": "ГОСТ Р 53195.4—2010\n57.3.2 \nОперации подтверждения соответствия должны выполняться в соответствии со специфи­\nкациями. разработанными при планировании подтверждения соответствия безопасности ПО (см. 5.6.3).\nП р и м е ч а н и е  — Методы/средства. рекомендуемые для применения при оценке и подтверждении соот­\nветствия. приведены в таблице А.7 приложения А й в  таблицах Б.З, Б.5 приложения Б.\n5.7.3.3 Результаты подтверждения соответствия безопасности программного обеспечения долж­\nны быть документированы.\n5.7.3.4 При проведении подтверждения соответствия безопасности ПО для каждой функции \nбезопасности должны быть документированы следующие данные:\n- хронологический перечень операций подтверждения соответствия:\n- используемая версия плана подтверждения соответствия безопасности ПО (см. 5.6.3);\n- подтверждаемые функции безопасности (с использованием тестирования или анализа) со ссыл­\nками на план подтверждения соответствия безопасности ПО (см. 5.6.3);\n- использованные инструменты и оборудование, а также данные калибровки:\n- критерии соответствия/несоответствия при процедуре подтверждения соответствия;\n- результаты операций подтверждения соответствия;\n- расхождения между ожидаемыми и фактическими результатами.\n5.7.3.5 При наличии расхождений между ожидаемыми и фактическими результатами проводят \nанализ и принимают решение о продолжении проверки или о подготовке запроса на внесение измене­\nний и возврате к более ранней стадии жизненного цикла разработки. Это решение должно быть доку­\nментировано как часть результатов подтверждения соответствия безопасности ПО.\n5.7.3.6 Подтверждение соответствия СБЗС ПО должно удовлетворять следующим требованиям:\n- основным методом подтверждения соответствия для ПО должно быть тестирование: анимацию \nи моделирование допускается использовать как дополнительные методы;\n- прогон программного обеспечения следует выполнять путем имитации;\n- входных сигналов в нормальном режиме работы:\n- предполагаемых случаев (моделей событий):\n- нежелательных условий, требующих вмешательства системы:\n- поставщиком и/или разработчиком должны быть предоставлены документированные резуль­\nтаты подтверждения соответствия безопасности ПО и вся имеющая отношение к этой операции до­\nкументация в распоряжение разработчика системы для предоставления ему возможности выполнить \nтребования ГОСТ Р 53195.1 — ГОСТ Р 53195.3.\n5.7.37 К качеству программных инструментов предъявляют следующие требования:\n- все инструменты, используемые при подтверждении соответствия, должны быть квалифициро­\nваны в соответствии со спецификациями, разработанными на основе национального стандарта (если \nтаковой имеется) или международного стандарта (если таковой имеется) либо в соответствии с обще­\nпринятыми процедурами;\n- оборудование, используемое при подтверждении соответствия, должно быть определенным об­\nразом квалифицировано, должна быть продемонстрирована его пригодность для подтверждения соот­\nветствия всего используемого инструментария АС и ПО.\nП р и м е ч а н и е  — В настоящем стандарте квалифицированно представляет собой операцию, которая де­\nмонстрирует выполнение конкретной спецификации в отличие от базовых процедур проверки соответствия, кото­\nрые могут использоваться по отношению к любой спецификации.\n57.3.8 К результатам подтверждения соответствия ПО предъявляются следующие требования:\n- проверки должны показать, что все требования, предъявляемые к безопасности ПО, выполняют­\nся правильно и что ПО не выполняет непредусмотренных функций;\n- тестовые примеры и результаты тестирования должны быть документированы для последую­\nщего анализа и независимой экспертизы в соответствии с требованиями уровня полноты безопасности \n(см. ГОСТ Р 53195.2—2008, 7.6.10);\n- документированные результаты подтверждения соответствия безопасности ПО должны содер­\nжать утверждение о том. что программа прошла подтверждение соответствия, либо описание причин, \nпо которым она не прошла его.\n5.7.4 Модификация ПО\n57.4.1 \nВнесение корректировок, улучшений или изменений в ПО. подтвержденное на соответ­\nствие требованиям безопасности, не должно приводить к снижению уровня полноты безопасности ПО.\n19"
        },
        {
            "page": 25,
            "page_content": "ГОСТ Р 53195.4—2010\n5.7.4.2 Перед выполнением какой-либо модификации ПО должны быть подготовлены процедуры \nмодификации (см. ГОСТ Р 53195.2—2008, 7.17).\nП р и м е ч а н и я\n1 Требования 5.7.4 относятся, в первую очередь, к изменениям, выполняемым на этапе работы программ­\nного обеспечения. Они могут также применяться во время интеграции программируемой электроники, а также во \nвремя обшей установки и ввода в эксплуатацию (см. ГОСТ Р 53195.2—2008. 7.17).\n2 Пример модели процедуры модификации приведен в ГОСТ Р 53195.2—2008. рисунок 5.\n3 Методы/средства. рекомендуемые к применению в случав модификации ПО. приведены в таблице А.8 \nприложения А.\n5.7.4.3 Процесс модификации может быть начат только после появления запроса на санкциони­\nрованную модификацию ПО в рамках процедур, определенных на этапе планирования безопасности \n(см. ГОСТ Р 53195.2—2008, 6.2. 7.17.2, 7.17.3). в котором приведена подробная информация:\n- об опасностях, к которым могут привести изменения;\n- о предлагаемых изменениях:\n- о причинах изменений.\nП р и м е ч а н и е  —  Причины появления запроса на модификацию могут быть обусловлены, например:\n- тем. что функциональная безопасность оказалась ниже той. которая была установлена в спецификациях:\n- систематическими отказами:\n- появлением нового или изменением действующего законодательства, относящегося к безопасности;\n- модификацией УО или способа его использования:\n- модификацией общих требований к безопасности;\n- результатом анализа характеристик работы и обслуживания СБЗС-систем, который показывает, что эти \nхарактеристики имеют значения ниже запланированных;\n- результатом текущего аудита функциональной безопасности.\n5.7.4.4 Должен быть проведен анализ влияния предлагаемых модификаций ПО на функциональ­\nную безопасность СБЗС-систем с целью определения;\n- необходим ли анализ риска.\n- какие из стадий жизненного цикла ПО и программных модулей следует повторить.\n5.7.4.5 Результаты анализа влияния, полученные в 5.7.4.4. должны быть документированы.\n5.7.4.6 Все модификации, оказывающие влияние на функциональную безопасность СБЗС-систем, \nдолжны приводить к возврату на соответствующую стадию жизненного цикла ПО и программных мо­\nдулей. Все последующие стадии должны выполняться в соответствии с процедурами, определенными \nдля отдельных стадий согласно требованиям настоящего стандарта. При планировании безопасности \n(см. ГОСТ Р 53195.2—2008, 6.2) должны быть подробно описаны все последующие процессы.\nП р и м е ч а н и е  — Может потребоваться выполнение полного анализа опасностей и рисков, в результате \nкоторого может появиться необходимость в установлении иных уровней полноты безопасности, отличных от ранее \nопределенных уровней для СБЗС-систем и внешних средств уменьшения риска.\n5.7.47 Планирование безопасности для модификации СБЗС ПО должно включать в себя следу­\nющую информацию:\n- идентификацию персонала и определение требований к его квалификации;\n- подробную спецификацию модификации;\n- план верификации;\n- область применения операций повторного подтверждения соответствия и тестирования моди­\nфикации в степени, необходимой для конкретного уровня полноты безопасности.\n57.4.8 Модификация должна быть выполнена в соответствии с разработанным планом проведе­\nния модификации.\n57.4.9 Все модификации должны быть подробно документированы, включая:\n- запрос на модификацию/корректировку;\n- результаты анализа влияния на функциональную безопасность предлагаемыми модификациями \nПО и принятые решения с их обоснованием;\n- сведения об изменениях конфигурации ПО;\n- отклонения от нормальной работы и нормальных условий работы;\n- все документы, которые затрагиваются процессами модификации.\n5.7.4.10 \nИнформация в хронологическом порядке о деталях всех выполненных модификаций \nдолжна быть документирована. Документация должна включать в себя данные и результаты повторной \nверификации и повторного подтверждения соответствия.\n20"
        },
        {
            "page": 26,
            "page_content": "ГОСТ Р 53195.4—2010\nП р и м е ч а н и е  — Требования 5.7.4 относятся, в первую очередь, к изменениям, выполняемым на этапе \nработы ПО. Они могут также применяться во время интеграции программируемой электроники, а также во время \nобщей установки и ввода в эксплуатацию (ГОСТ Р 53195.2—2008, 7.17).\n5.7.4.11 \nОценка необходимых модификаций или корректировок должна зависеть от результатов \nанализа влияния модификаций и уровня полноты безопасности программного обеспечения.\n5.8 Верификация ПО\n5.8.1 Верификация в рамках настоящего стандарта представляет собой процедуру, выполняемую \nпутем анализа и/или тестирования для каждой стадии жизненного цикла ПО в целях установления, \nудовлетворяют ли выходные данные для используемых входных данных во всех отношениях набору \nцелей и требований для соответствующей стадии жизненного цикла ПО.\n5.8.2 Требования к верификации\n5.8.2.1 Верификация ПО для каждой стадии жизненного цикла программных модулей должна \nпланироваться одновременно с планированием их разработки; вся информация, относящаяся к вери­\nфикации. должна документироваться.\n5.8.2.2 Планирование верификации ПО должно касаться критериев, методов и инструментария, \nиспользуемого при верификации. В ходе планирования должны быть рассмотрены;\n- оценка требований полноты безопасности;\n- выбор и документирование процедур, процессов и методов верификации.\n- выбор и использование инструментов верификации (тестовая программа, специальные про­\nграммные средства для тестирования, имитаторы ввода/вывода и т. п.):\n- оценка результатов верификации;\n- исправления, которые должны быть сделаны.\n5.8.2.3 Верификация программного обеспечения должна быть выполнена в соответствии с \nпланом.\nП р и м е ч а н и я\n1 Выбор методов и средств, предназначенных для верификации, а также степень независимости процессов \nверификации устанавливаются проектировщиком ПО с учетом факторов, к которым относятся:\n- размер проекта;\n- степень сложности.\n- степень новизны проекта;\n- степень новизны технологии.\n2 Методы/средства. рекомендуемые для применения при верификации, приведены в таблице А.9 приложе­\nния А и таблице Б.8 приложения Б.\n5.8.2.4 Должны быть документированы свидетельства того, что верифицируемая стадия завер­\nшена удовлетворительно во всех отношениях.\n5.8.2.5 Документация, составляемая после каждой верификации, должна содержать:\n- перечень пунктов, подлежащих верификации;\n- идентификацию информации, по отношению к которой выполняется верификация.\n- перечень несоответствий.\nП р и м е ч а н и е  — Примерами несоответствий служат программные модули, структуры данных и алгорит­\nмы. которые плохо адаптированы к задаче.\n5.8.2.6 Вся существенная информация, относящаяся к стадии N жизненного цикла СБЗС ПО. не­\nобходимая для правильного выполнения следующей стадии N + 1, должна быть доступна разработчику \nПО и верифицирована. К выходной информации стадии N относятся:\n- информация об адекватности спецификации описания проекта либо исходного текста программ, \nразработанных в ходе стадии N в части:\n- функциональности;\n- полноты безопасности, характеристик и других требований планирования безопасности;\n- требований понятности для коллектива разработчиков;\n- безопасной модификации, допускающей дальнейшее совершенствование ПО;\n- информация об адекватности планирования подтверждения соответствия и тестов, определен­\nных для стадии N. определению и описанию проекта стадии N.\n21"
        },
        {
            "page": 27,
            "page_content": "ГОСТ Р 53195.4—2010\n- результаты несоответствия:\n- между тестами, определенными для стадии N. и тестами, определенными для предыдущей \nстадии N -  1;\n- между выходными данными стадии N.\n5.8.27 С учетом 5.8.2 должны быть выполнены следующие операции верификации.\n- верификация требований к безопасности программного обеспечения;\n- верификация структуры программного обеспечения:\n- верификация проекта системы программного обеспечения:\n- верификация проектов программных модулей;\n- верификация исходных текстов программ:\n- верификация данных;\n- тестирование программных модулей;\n- тестирование интеграции программного обеспечения:\n- тестирование интеграции программируемой электроники.\n- тестирование требований к безопасности программного обеспечения (подтверждение соответ­\nствия программного обеспечения).\n5.8.2.8 Верификация требований к безопасности программного обеспечения\nПосле определения требования к безопасности ПО и перед началом следующей стадии проекти­\nрования и разработки ПО верификация должна обеспечивать проверку:\n- соответствуют ли требования к безопасности ПО требованиям к безопасности СБЗС-систем \n(см. ГОСТ Р 53195.3) в отношении функциональности, безопасности, полноты безопасности, характе­\nристик и других требований к планированию безопасности;\n- соответствует ли планирование подтверждения соответствия программ для обеспечения без­\nопасности требованиям к безопасности ПО:\n- наличия несоответствия:\n- между специфицированными требованиями к безопасности ПО и специфицированными тре­\nбованиями к безопасности СБЗС-систем (см. ГОСТ Р 53195.3);\n- между специфицированными требованиями к безопасности ПО и планированием подтверж­\nдения соответствия безопасности программного обеспечения.\n5.8 \n2.9 Верификация структуры ПО\nПосле проектирования структуры ПО верификация должна обеспечить проверку:\n- удовлетворяет ли описание проекта структуры ПО специфицированным требованиям к безопас­\nности ПО.\n- адекватны ли специфицированные тесты интеграции структуры ПО описанию проекта структу­\nры ПО,\n- адекватны ли атрибуты каждого основного компонента/подсистемы в отношении:\n- реализуемости требуемых характеристик безопасности;\n- возможности проверки при последующей верификации:\n- пониманию структуры ПО персоналом, выполняющим разработку и верификацию;\n- безопасной \nмодификации, \nпозволяющей \nвыполнять дальнейшее \nсовершенствование \nпрограммы;\n- наличия несовместимости:\n- между описанием проекта структуры ПО и специфицированными требованиями к безопас­\nности ПО;\n- между описанием проекта структуры ПО и специфицированными тестами интеграции струк­\nтуры ПО:\n- между специфицированными тестами интеграции структуры ПО и планированием подтверж­\nдения соответствия безопасности ПО:\n5.8.2.10 Верификация проекта системы ПО\nПосле завершения спецификации системы ПО верификация должна проверить:\n- удовлетворяет ли специфицированный проект системы ПО проекту структуры ПО;\n- удовлетворяют ли специфицированные тесты интеграции системы ПО проекту системы ПО:\n- адекватны ли атрибуты каждого основного компонента проекта системы ПО в отношении:\n- реализуемости требуемых характеристик безопасности;\n- возможности проверки при последующей верификации;\n- понимания персоналом, выполняющим разработку и верификацию;\n22"
        },
        {
            "page": 28,
            "page_content": "ГОСТ Р 53195.4—2010\n-безопасной модификации, позволяющей выполнять дальнейшее совершенствование про­\nграммы:\n- наличия несоответствий:\n- между специфицированным проектом системы ПО и описанием проекта структуры ПО;\n- между описанием проекта системы ПО и специфицированными тестами интеграции системы \nПО;\n- между тестами интеграции системы ПО и специфицированными тестами интеграции структуры.\n5.8.2.11 Верификация проекта модулей ПО\nПосле завершения разработки и спецификации каждого программного модуля верификация \nдолжна обеспечить проверку:\n- удовлетворяет ли специфицированный проект программного модуля проекту системы ПО.\n- адекватны ли специфицированные проверки каждого программного модуля проекту программ­\nного модуля.\n- адекватны ли атрибуты каждого программного модуля в отношении:\n- реализуемости требуемых характеристик безопасности:\n- возможности проверки при последующей верификации;\n- понимания персоналом, выполняющим разработку и верификацию:\n-безопасной модификации, позволяющей выполнять дальнейшее совершенствование про­\nграммы;\n- наличия несоответствий;\n- между специфицированным проектом программного модуля и специфицированным проектом \nсистемы ПО:\n- между специфицированным проектом каждого программного модуля и специфицированными \nтестами программных модулей;\n- между специфицированными тестами программных модулей и специфицированными тестами \nинтеграции системы ПО.\n5.8.2.12 Верификация исходного текста\nДля гарантирования соответствия исходного текста программы специфицированным проектам \nпрограммных модулей, необходимым стандартам кодирования и требованиям планирования безопас­\nности исходный текст должен быть верифицирован с использованием статических методов.\nП р и м е ч а н и е  — На ранних стадиях жизненного цикла ПО верификация является статической (например, \nизучение, просмотр, формальная проверка и т.п.). Верификация исходного текста включает в себя такие методы, \nкак просмотр и прогон ПО. Сочетание положительных результатов верификации исходных текстов и тестирования \nпрограммных модулей гарантирует, что каждый программный модуль будет соответствовать своей спецификации.\n5.8.2.13 Верификация данных\nПри верификации данных должны быть предусмотрены следующие проверки.\n- структуры данных, специфицированные во время проектирования, должны быть проверены в \nчасти:\n- полноты;\n- согласованности:\n- защиты от изменения или повреждения;\n- соответствия функциональным требованиям системы, управляемой данными;\n- прикладные данные должны быть проверены в части:\n- соответствия структурам данных;\n- полноты;\n- совместимости с базовым ПО (например, в отношении последовательности исполнения, со­\nвместимости на этапе исполнения и др.);\n- правильности значений данных.\nВсе параметры, которые могут быть изменены, должны быть проверены на защиту:\n- от неверных и неопределенных начальных значений;\n- от ошибочных, несовместимых или необоснованных значений;\n- от несанкционированных изменений;\n- от повреждения данных.\n23"
        },
        {
            "page": 29,
            "page_content": "ГОСТ Р 53195.4—2010\nВсе промышленные интерфейсы и соответствующее ПО (т. е. датчиков и устройств привода, а \nтакже автономных интерфейсов) должны быть проверены в части:\n- обнаружения ошибок;\n- защиты от повреждения;\n- подтверждения данных.\n5.8.2.14 \nВерификация данных в процессе эксплуатации СБЗС ПО должна осуществляться авто­\nматически при включении оборудования, периодически, а также по запросу оператора.\n6 Оценка функциональной безопасности\n6.1 Цели и требования к оценке соответствия СБЗС ПО устанавливаются по ГОСТ Р 53195.2—2008 \n(раздел 8).\n6.2 Минимальный уровень независимости лиц или организаций, выполняющих оценку функцио­\nнальной безопасности, должен устанавливаться по ГОСТ 53195.2—2008 (8.14. таблицы 3 и 4).\n6.3 При оценке функциональной безопасности могут быть использованы результаты процессов, \nприведенных в таблице А. 10 приложения А.\nП р и м е ч а н и е  — Выбор методов, приведенных е приложениях А и Б. не дает полной гарантии достижения \nнеобходимой полноты безопасности. Лицами или организациями, выполняющими оценку соответствия, должно \nбыть также рассмотрено и учтено следующее:\n-совместимость и взаимное дополнение выбранных методов, языков и инструментов для всего цикла \nразработки;\n- полностью ли понимают разработчики методы, языки и инструменты, которые они используют;\n- насколько хорошо адаптированы методы, языки и инструменты к конкретным проблемам, с которыми при­\nходится сталкиваться при разработке.\n24"
        },
        {
            "page": 30,
            "page_content": "ГОСТ Р 53195.4—2010\nПриложение А \n(справочное)\nРуководство по выбору методов и средств\nНекоторые из подразделов настоящего стандарта связаны с таблицами, приведенными в приложени­\nях А и Б. Например, подраздел 5.6 связан с таблицей А.1. Более подробные таблицы, которые раскрывают содер­\nжание некоторых элементов таблиц приложения А. содержатся в приложении Б. Например, таблица Б.2 раскрыва­\nет содержание динамического анализа и тестирования из таблицы А.5.\nДля каждого метода/средства. упомянутого в приложениях А и Б. даны рекомендации по уровню полноты \nбезопасности, изменяющемуся от SIL1 до SIL4. Эти рекомендации обозначаются следующим образом:\nКР (HR) — метод/средство, крайне рекомендуемые для данного уровня полноты безопасности. Если указан­\nные метод'средство не используют, то на этапе планирования должно быть дано подробное обоснование отказа от \nих применения, согласованное с экспертом;\nР (R) — метод/средство. рекомендуемые для данного уровня полноты безопасности. Степень обязательно­\nсти их применения ниже, чем в случав рекомендации КР (HR).\n------ метод/средство. не имеющие рекомендаций по применению или неприменению;\nHP (NR) — метод/средство. не рекомендуемые к применению для данного уровня полноты безопасности. \nЕсли эти метод'средство применяют, то на стадии планирования должно быть приведено подробное обоснование \nего применения, которое необходимо согласовать с экспертом.\nМетоды/средства следует выбирать в соответствии с уровнем полноты безопасности. Альтернативные или \nэквивалентные методы/средства обозначены буквой, следующей за номером. Следует выполнять только один из \nальтернативных или эквивалентных методов/средств.\nРанжирование методов,/средств связано с концепцией эффективности, используемой в ГОСТ Р 53195.3. При \nпрочих равных условиях методы, имеющие ранг КР (HR), будут более эффективны в предотвращении внесения \nсистематических ошибок при разработке ПО либо при разработке структуры программ, будут более эффективны \nпри выявлении ошибок, оставшихся не обнаруженными на этапе выполнения программ, по сравнению с методами, \nимеющими ранг Р (R).\nПри большом числе факторов, влияющих на полноту безопасности ПО. невозможно установить алго­\nритм, определяющий такую комбинацию методов и средств, которая была бы корректной для любого заданного \nприложения.\nПри планировании безопасности для конкретного приложения должна быть установлена соответствую­\nщая комбинация подлежащих использованию методов/средств. если примечания к таблице не налагают иных \nтребований.\nТ а б л и ц а  А.1 — Рекомендации по применению методов/средств проектирования и разработки ПО (см. 5.5,5.6.4)\nМ етоды/средства проектирования \nи разработки ПО\nС сы пка на структурную  \nединицу стандарта\nРант применимости методов/средств дпя\nSIL1\nSU.2\nSIL3\nSIL4\n1 Компьютерные \nсредства \nразработки \nспецификаций\nВ.2.4.\nГОСТ Р53195.5—2010\nР (R)\nP(R)\nKP (HR)\nKP (HR)\n2а Полуформальные методы\nТаблица Б.7, \nнастоящий стандарт\nP(R)\nP(R)\nKP (HR)\nKP (HR)\n26 Формальные методы, использующие, \nнапример. CCS. CSP. HOL. OBJ. LOTOS, \nвременную логику. VDM и Z\nВ.2.4.\nГОСТ Р 53195.5—2010\n—\nP(R)\nP(R)\nKP (HR)\nП р и м е ч а н и я\n1 Спецификация требований к безопасности программного обеспечения всегда будет требовать описа­\nния задачи на естественном языке и использования необходимой системы математических обозначений, от­\nражающих содержание приложения.\n2 Таблица отражает дополнительные требования для ясного и точного определения требований к \nбезопасности программного обеспечения.\n25"
        },
        {
            "page": 31,
            "page_content": "ГОСТ Р 53195.4—2010\nТ а б л и ц а  \nА.2 — Рекомендации по применимости методов/средств для проектирования и разработки ПО: \nпроектирование структуры программ (см. 5.6.5)\nМетоды^срвдствд проектировакия структуры \nпрограмм\nС сы лка на структурную \nединицу стандарта\nРант применимости мет од on.'средств для\nSIL1\nSIL2\nSIL3\nSIL4\n1 Обнаружение и диагностика сбоев и оши­\nбок\nВ.3.1,\nГОСТ Р 53195.5—2010\n—\nP(R>\nKP(HR)\nKP (HR)\n2 Обнаружение и исправление ошибок\nВ 3 2\nГОСТ Р 53195.5—2010\nР (R)\nP(R)\nP(R)\nKP (HR)\nЗа Программирование с проверкой ошибок\nВ 3 3\nГОСТ Р 53195.5—2010\nP(R)\nP(R)\nP(R)\nKP (HR)\n36 Методы «подушки безопасности»\nВ.3.4.\nГОСТ Р 53195.5—2010\n—\nP(R)\nP(R)\nP(R)\nЗв Многовариангное программирование\nВ 3 5\nГОСТ Р 53195.5—2010\nP(R)\nP(R>\nP(R)\nKP (HR)\nЗг Блоки восстановления\nВ.3.6.\nГОСТ Р 53195.5—2010\nP(R)\nP(R)\nP(R)\nP(R)\nЗд Восстановление предыдущего состоя­\nния\nВ.3.7.\nГОСТ Р 53195.5—2010\nP(R)\nP (R)\nP(R)\nP(R)\nЗе Прямое восстановление\nВ.3.8.\nГОСТ Р53195.5—2010\nP(R)\nP(R)\nP(R)\nP(R)\nЗж Повторный запуск механизмов восста­\nновления после ошибок\nВ.3.9.\nГОСТ Р 53195.5—2010\nP(R)\nP(R>\nP(R)\nKP (HR)\nЗи Сохранение достигнутых состояний\nВ.3.10.\nГОСТ Р 53195.5—2010\n—\nP(R)\nP(R)\nKP (HR)\n4 Постепенное отключение функций\nВ.3.11,\nГОСТ Р 53195.5—2010\nP(R)\nP(R)\nKP (HR)\nKP (HR)\n5 Исправление ошибох методами искус­\nственного интеллекта\nВ.3.12.\nГОСТР53195.5—2010\n—\nHP (NR)\nHP (NR)\nHP (NR)\n6 Динамическая реконфигурация\nВ.3.13.\nГОСТ Р 53195.5—2010\n—\nHP (NR)\nHP (NR)\nHP (NR)\n7а Структурные методы, включая, напри­\nмер. JSD. MASCOT. SADT и Yourdon\nВ.2.1,\nГОСТ Р 53195.5—2010\nKP (HR)\nKP (HR)\nKP(HR)\nKP (HR)\n76 Полуформальные методы\nТаблица Б.7. \nнастоящий стандарт\nP(R)\nP(R>\nKP (HR)\nKP (HR)\n8 Компьютерные \nсредства \nразработки \nспецификаций\nБ.2.4.\nГОСТР53195.5—2010\nP(R)\nP(R>\nKP (HR)\nKP (HR)\nП р и м е ч а н и е  — Приведенные в данной таблице средства, касающиеся устойчивости к ошибкам (кон­\nтроль ошибок), должны рассматриваться совместно с требованиями, описанными в ГОСТ Р 53195.3 к структуре \nи контролю ошибок для АС программируемых электронных устройств.\n26"
        },
        {
            "page": 32,
            "page_content": "ГОСТ Р 53195.4—2010\nТ а б л и ц а  А.З — Рекомендации по применимости методов/средсгв для проектирования и разработки ПО: ин­\nструментальные средства поддержки и языки программирования (см. 5.6.6)\nМ етоды/средства для проектирования инструмен­\nтальных средств поддержки и языки програыыиро \nваиия\nСсылка\nна структурную  \nединицу\nГОСТ Р 53195 5 —2010\nРанг применимости методаа^срсдста для\nSIL1\nSIL2\nSIL3\nSIL4\n1 Выбор соответствующего языка програм­\nмирования\nВ.4.7\nКР (HR)\nKP (HR)\nKP (HR)\nKP (HR)\n2 Строго типизированные языки программи­\nрования\nВ.4.1\nКР (HR)\nKP (HR)\nKP (HR)\nKP (HR)\n3 Подмножество языка\nВ.4.2\n—\n—\nKP (HR)\nKP (HR)\n4а Сертифицированные средства\nВ.4.3\nP(R>\nKP (HR)\nKP (HR)\nKP (HR)\n46 Инструментальные средства, заслужива­\nющие доверия на основании опыта использо­\nвания\nВ.4.4\nКР (HR)\nKP (HR)\nKP (HR)\nKP (HR)\n4в Сравнение исходных программ и исполни­\nмых кодов\nВ.4.5\nКР (HR)\nKP (HR)\nKP (HR)\nKP (HR)\n5а Сертифицированный компилятор\nВ.4.3\nP(R)\nKP (HR)\nKP (HR)\nKP (HR)\n56 Трансляторы, заслуживающие доверия на \nосновании опыта использования\nВ.4.4\nКР (HR)\nKP (HR)\nKP (HR)\nKP (HR)\n6 Библиотека проверенны»'верифицирован- \nных модулей и компонентов\nВ.4.6\nP(R)\nKP (HR)\nKP (HR)\nKP (HR)\nТ а б л и ц а  А.4 — Рекомендации по применимости методов/средсгв для проектирования и разработки ПО: \nдетальное проектирование (см. 5.6.4. 5.6.5 и 5.6.7)\nМетоаы/средства детального проектирования\nСсылка на структурную \nединицу стандарта\nРанг применимости мстодоаГсредсто для\nSIL1\nStt.2\nSIL3\nSIL4\n1a Структурные методы, включая, напри­\nмер. JSD, MASCOT. SADT и Yourdon\nВ-2.1,\nГОСТ Р 53195.5—2010\nКР (HR)\nKP (HR)\nKP (HR)\nKP (HR)\n16 Полуформальные методы\nТаблица Б.7, \nнастоящий стандарт\nP(R)\nKP (HR)\nKP (HR)\nKP (HR)\n1в Формальные методы, включая, напри­\nмер. CCS. CSP. HOL. LOTOS. OBJ. времен­\nную логику. VDM и Z\nВ.2.4.\nГОСТ Р 53195.5—2010\nP(R)\np  (R)\nKP (HR)\n2 Средства автоматизированного проекти­\nрования\nБ.3.5—2010. \nГОСТ Р 53195.5—2010\nP(R>\nP(R)\nKP (HR)\nKP (HR)\n3 Программирование с защитой\nВ.2.5—2010. \nГОСТ Р 53195.5—2010\n—\nP(R)\nKP (HR)\nKP (HR)\n4 Модульный подход\nТаблица Б.9, \nнастоящий стандарт\nКР (HR)\nKP (HR)\nKP (HR)\nKP (HR)\n5 Стандарты для проектирования и кодиро­\nвания\nТаблица Б.1, \nнастоящий стандарт\nP(R)\nKP (HR)\nKP (HR)\nKP (HR)\n6 Структурное программирование\nВ.2.7.\nГОСТ Р 53195.5—2010\nKP (HR)\nKP (HR)\nKP (HR)\nKP (HR)\n7 Использование проверенных/верифици- \nрованных программных модулей и компо­\nнентов (по возможности)\nВ.2.10. В.4.6. \nГОСТ Р 53195.5—2010\nP(R)\nKP (HR)\nKP (HR)\nKP (HR)\n27"
        },
        {
            "page": 33,
            "page_content": "ГОСТ Р 53195.4—2010\nТ а б л и ц а  А.5 — Рекомендации по применимости методов/средств для проектирования и разработки ПО: тести­\nрование программных модулей и интеграция (см. 5.6.9 и 5.6.10)\nМ етоды/средстоа тестирования \nпрограммных модулей и интеграции\nС сы лка на структурную  единицу \nстандарта\nРант применимости методоо.'средств дли\nSIL1\nSIL2\nSIL3\nSIL4\n1 Вероятностное тестирование\nВ.5.1. ГОСТ Р 53195.5—2010\n—\nP(R)\nP(R)\nKP (HR)\n2 Динамический анализ\nБ.6.4. ГОСТ Р 53195.5—2010: \nтаблица Б.2, настоящий \nстандарт\nР (R)\nKP (HR)\nKP (HR)\nKP (HR)\n3 Регистрация и анализ данных\nВ.5.2. ГОСТ Р 53195.5—2010\nКР (HR)\nKP (HR)\nKP (HR)\nKP (HR)\n4 Функциональное \nтестирование \nи тестирование методом «черного \nящика»\nБ.5.1, Б.5.2.\nГОСТ Р 53195.5—2010; \nтаблица Б.З. \nнастоящий стандарт\nКР (HR)\nKP (HR)\nKP (HR)\nKP (HR)\n5 Моделирование реализации\nВ.5.20.\nГОСТ Р 53195.5—2010; \nтаблица Б.6. \nнастоящий стандарт\nP(R)\nP(R)\nKP (HR)\nKP (HR)\n6 Тестирование интерфейса\nВ.5.3. ГОСТ Р 53195.5—2010\nP(R)\nP(R)\nKP (HR)\nKP (HR)\nП р и м е ч а н и е  — Тестирование программных модулей и интеграции относится к процессам верифика­\nции (см. таблицу А.9 настоящего приложения).\nТ а б л и ц а  А.6 — Рекомендации по применимости методов/средств для интеграции программируемой электро­\nники (ПО и АС) (см. 5.6.11)\nМетоды.'средстна для интеграции PE (ПО и АС)\nСсылка на структурную\nРант применимости методов/средств для\nединицу стандарта\nSIL1\nSIL2\nSIL3\nSIL4\n1 Функциональное тестирование и тести­\nрование методом «черного ящика»\nБ.5.1. Б.5.2.\nГОСТ Р 53195.5—2010; \nтаблица Б.З. \nнастоящий стандарт\nКР (HR)\nКР (HR)\nК Р (HR)\nКР (HR)\n2 Моделирование выполнения\nВ.5.20.\nГОСТ Р 53195.5—2010; \nтаблица Б.6, \nнастоящий стандарт\nР (R)\nКР (HR)\nКР (HR)\nКР (HR)\nП р и м е ч а н и е  — Тестирование программных модулей и интеграции относится к процессам верифика­\nции (см. таблицу А.9 настоящего приложения).\nТ а б л и ц а  А.7 — Рекомендации по применимости методов/средств подтверждения соответствия ПО (см. 5.6.3, \n5.7.3)\nМ стады/средства для подтверждения \nсоответствия ПО\nС сы лка на структурную  единицу \nстандарта\nРант применимости методов/средств для\nSIL1\nSIL2\nSIL3\nSIL4\n1 Вероятностное тестирование\nВ.5.1. ГОСТ Р 53195.5—2010\n—\nР (R)\nР (R)\nКР (HR)\n2 Имигация/моделироеание\nТаблица Б.5, \nнастоящий стандарт\nP(R)\nР (R)\nКР (HR)\nКР (HR)\n3 Функциональное \nтестирование \nи тестирование методом «черного \nящика»\nБ.5.1. Б.5.2.\nГОСТ Р 53195.5—2010; \nтаблица Б.З. \nнастоящий стандарт\nКР (HR)\nКР (HR)\nКР (HR)\nКР (HR)\n28"
        },
        {
            "page": 34,
            "page_content": "ГОСТ Р 53195.4—2010\nТ а б л и ц а  А.8 — Рекомендации по применимости методоа'средств для модификации ПО (см. 5.7.4)\nМ етоды/средства для модиф икации ПО\nСсы лка на структурную  единицу \nстандарта\nРант применимости методоа.'средств для\nSIL1\nSIL2\nSIL3\nSIL4\n1 Анализ влияния\nВ.5.23. ГОСТ Р 53195.5—2010\nКР (HR)\nКР (HR)\nКР (HR)\nКР (HR)\n2 Имитация/моделирование\nВ.5.23. ГОСТ Р 53195.5-2010\nP(R>\nК Р (HR)\nКР (HR)\nКР (HR)\n3 Повторная верификация программ­\nных модулей, на которые оказывают \nвлияние изменения в других модулях\nВ.5.23. ГОСТ Р 53195.5—2010\nКР (HR)\nК Р (HR)\nКР (HR)\nКР (HR)\n4 Повторная верификация системы в \nцелом\nВ.5.23. ГОСТ Р 53195.5-2010\n—\nР (R)\nКР (HR)\nКР (HR)\n5 Управление конфигурацией ПО\nВ.5.24. ГОСТ Р 53195.5—2010\nКР (HR)\nКР (HR)\nКР (HR)\nКР (HR)\n6 Регистрация и анализ данных\nВ.5.2. ГОСТ Р 53195.5—2010\nКР (HR)\nК Р (HR)\nКР (HR)\nКР (HR)\nТ а б л и ц а  А.9 — Рекомендации по применимости методоа-'средств верификации ПО (см. 5.8)\nМ стоды/средства для вериф икации ПО\nС сы лка на структурны е единицы \nстандартов\nРант применимости методоа.'средств для\nSIL1\nSIL2\nSIL3\nSIL4\n1 Формальное доказательство\nВ.5.13, ГОСТ Р 53195.5—2010\n—\nР (R)\nР (R)\nКР (HR)\n2 Вероятностное тестирование\nВ.5.1, ГОСТ Р 53195.5—2010\n—\nР (R)\nP(R)\nКР (HR)\n3 Статический анализ\nБ.6.3. ГОСТ Р 53195.5-2010; \nтаблица Б.8. \nнастоящий стандарт\nр  (R)\nК Р (HR)\nКР (HR)\nКР (HR)\n4 Динамический анализ\nБ.6.5. ГОСТ Р 53195.5—2010; \nтаблица Б.2. \nнастоящий стандарт\nР (R)\nК Р (HR)\nКР (HR)\nКР (HR)\n5 Метрики сложности программного \nобеспечения\nВ.5.14. ГОСТ Р 53195.5—2010\nР (R)\nР (R)\nр (R)\nР (R)\n6 Тестирование и интеграция про­\nграммных модулей\nТаблица А.5 настоящего приложения\n7 Проверка интеграции программи­\nруемых электронных устройств\nТаблица А.6 настоящего приложения\n8 Тестирование программной систе­\nмы (подтверждение соответствия)\nТаблица А.7 настоящего приложения\nП р и м е ч а н и я\n1 В настоящей таблице все процессы, связанные с верификацией, объединены для удобства изложения \nматериала. При ее применении дополнительные требования к элементам верификации, связанным с динами­\nческим тестированием в таблицах А.5 и А.6. которые относятся к процессам верификации, не предъявляются. \nНе требуется также проведение верификационного тестирования в дополнение к подтверждению соответствия \nПО (см. таблицу А.7 настоящего приложения).\n2 Верификация предусматривается в ГОСТ Р 53195.1—ГОСТ Р 53195.3. Следовательно, первая верифи­\nкация СБЗС-системы проводится на более ранних стадиях жизненного цикла системы.\n3 На ранних стадиях жизненного цикла СБЗС ПО верификация является статической. Она может вклю­\nчать в себя, например, изучение, просмотр, формальную проверку. Проведение динамического тестирования \nвозможно только после завершения разработки программы. Верификация программ динамическими средства­\nми включает в себя функциональное тестирование, тестирование методом «белого ящика», статистическое те­\nстирование. Для удостоверения в том. что каждый программный модуль удовлетворяет соответствующей спе­\nцификации. требуется объединение информации обоих типов.\n29"
        },
        {
            "page": 35,
            "page_content": "ГОСТ Р 53195.4—2010\nТ а б л и ц а  А. 10 — Рекомендации по применимости методов^средств для оценки функциональной безопасности \nПО (см. раздел 6)\nМетады.'средстаа для оценки ф ункциональ­\nной безопасности ПО\nС сы лка на структурную  \nединицу стандарта\nРант применимости методов/средств для\nSIL1\nSIL2\nSic 3\nSIL4\n1 Таблица контрольных проверок\nБ .2.5,\nГОСТ Р 53195.5—2010\nP(R)\nР (R)\nP(R)\nP(R)\n2 Таблицы решений и таблицы истин­\nности\nВ.6.1,\nГОСТ Р 53195.5—2010\nР (R)\nр  (R)\nP<R)\nP(R)\n3 Метрики \nсложности \nпрограммного \nобеспечения\nВ.5.14,\nГОСТ Р 53195.5—2010\nР (R)\nР (R)\nP<R)\nP(R)\n4 Анализ отказов\nТаблица Б.4, настоя­\nщий стандарт\nР (R)\nр  (R)\nKP (HR)\nKP (HR)\n5 Анализ отказов по общей причине\nВ.6.3,\nГОСТ Р 53195.5—2010\n—\nр  (R)\nKP (HR)\nKP(HR)\n6 Структурные схемы надежности\nВ.6.5,\nГОСТ Р 53195.5—2010\nР (R)\nр  (R)\nP(R)\nP(R)\n30"
        },
        {
            "page": 36,
            "page_content": "ГОСТ Р 53195.4—2010\nПриложение Б \n(справочное)\nПодробные таблицы\nТ а б л и ц а  Б.1 — Рекомендации по применению стандартов для проектирования и кодирования (упомянутых в \nтаблице А.4 приложения А)\nМ етоды(средетва для оценю функциональной без- \nопасности ПО\nСсылка иа струн- \nтурную единицу \nГОСТ Р 53195.5-2010\nРанг применимости метсдавГсредсто для\nSIL1\nSIL2\nSIL3\nSIL4\n1 Использование стандартов кодирования\nВ.2.6.2\nКР (H R)\nKP (H R )\nKP (HR)\nKP (H R)\n2 Отказ от использования динамических объ­\nектов\nВ.2.6.3\nP (R >\nKP (H R )\nKP (HR)\nKP (H R )\nЗа Отказ от использования динамических пе­\nременных\nВ.2.6.3\n—\nP(R)\nKP (HR)\nKP (H R )\n36 Проверка создания динамических пере­\nменных при выполнении программы\nВ.2.6.4\n—\nP(R)\nKP (H R)\nKP (H R)\n4 Ограниченное использование прерываний\nВ.2.6.5\nP (R )\nP(R)\nKP (HR)\nKP (H R)\n5 Ограниченное использование указателей\nВ.2.6.6\n—\nP(R)\nKP (HR)\nKP (H R )\n6 Ограниченное использование рекурсий\nВ.2.6.7\n—\nP(R)\nKP (H R)\nKP (H R)\n7 Неиспользование безусловных переходов в \nпрограммах, написанных на языках высокого \nуровня\nВ.2.6.2\nP (R )\nKP (H R )\nKP (HR)\nKP (H R)\nП р и м е ч а н и е  — Применение методов 2 и За не требуется, если использован компилятор, который \nгарантирует выделение достаточного обьема памяти для всех динамических переменных и обьектов до начала \nвыполнения программы либо вставляет проверки корректного выделения памяти в процессе выполнения.\nТ а б л и ц а  Б.2 — Рекомендации по применению методов/средств динамического анализа и тестирования (упомя­\nнутых в таблицах А.5 и А. 9 приложения А)\nМстодмГсредства динамического анализа и те сти \nроаания\nСсы лка на струх- \nгуриую  единицу \nГОСТ Р 5 3 1 9 5 .5 -2 0 1 0\nРанг применимости методов|'средств для\nSIL1\nSIL2\nSIL3\nSIL4\n1 Выполнение контрольного примера, начи­\nная с анализа граничных значений\nВ.5.4\nр  (R)\nKP (HR)\nKP (HR)\nKP (HR)\n2 Выполнение контрольного примера, начи­\nная с предполагаемой ошибки\nВ.5.5\nР (R)\nР (R)\nр  (R)\nР (R)\n3 Выполнение контрольного примера, начи­\nная с введения ошибки\nВ.5.6\n—\nР (R)\nKP (HR)\nKP (HR)\n4 Моделирование реализации\nВ.5.20\nP(R>\nР (R)\nр  (R)\nKP (HR)\n5 Разделение входных данных на классы эк­\nвивалентности\nВ.5.7\nР (R)\nР (R)\nр  (R)\nKP (HR)\n6 Структурное тестирование\nВ.5.8\nP(R>\nР (R)\nKP (HR)\nKP (HR)\nП р и м е ч а н и е  —  Анализ с использованием тестовых примеров проводят на уровне подсистем. Он ос­\nновывается на спецификациях и/'или спецификациях и текстах программ.\n31"
        },
        {
            "page": 37,
            "page_content": "ГОСТ Р 53195.4—2010\nТ а б л и ц а  Б.З — Рекомендации по применению методов/средств функционального тестирования и тестирования \nметодом «черного ящика» (упомянутых в таблицах А.5, А.6 и А.7 приложения А)\nМ етоды/средства ф ункционального тестирования и \nтестирования методом «черного ящика»\nС сы пка на струк­\nтурную  единицу \nГОСТ Р 5 3 1 9 5 .6 -2 0 1 0\nРанг применимости методов/средств для\nS IL t\nSIL2\nSIL3\nSIL4\n1 Выполнение контрольного примера, начиная \nс причинно-следственных диаграмм\nБ.6.5.2\n—\n—\nP(R)\nP(R)\n2 Макетирование/анимация\nВ.5.17\n—\n—\nP(R)\nP(R)\n3 Анализ граничных значений\nВ. 5.4\nР (R)\nКР (HR)\nKP (HR)\nKP (HR)\n4 Разделение входных данных на классы экви­\nвалентности\nВ.5.7\nP(R)\nКР (HR)\nKP (HR)\nKP (HR)\n5 Моделирование процесса\nВ.5.18\nP(R)\nP(R)\nP(R)\nP(R)\nП р и м е ч а н и я\n1 Анализ с использованием контрольных примеров выполняется на уровне систем ПО и основывается \nтолько на спецификациях.\n2 Необходимая полнота моделирования должна выбираться в зависимости от уровня полноты безопас­\nности. сложности и условий применения.\nТ а б л и ц а  Б.4 — Рекомендации по применению методов/средств анализа отказов (упомянутых в таблице А. 10 \nприложения А)\nМ етоды/средства анализа отказов\nС сы лка на струк- \nтурную  единицу \nГОСТ Р 5 3 1 9 5 .5 -2 0 1 0\nРанг применимости методов/средств для\nSIL1\nSIL2\nSIL3\nSIL4\n1a Диаграммы последовательностей событий\nБ.6.5.2\nР (R)\nР (R)\nр  (R)\nр  (R)\n16 Анализ методом дерева событий\nБ.6.5.3\nР (R)\nP(R>\nР (R)\nр  (R)\n2 Анализ методом дерева отказов\nБ.6.5.5\nР (R)\nР (R)\nКР (HR)\nКР (HR)\n3 Анализ видов отказов и критичности компо­\nнентов\nБ.6.5.4\nР (R)\nР (R)\nКР (HR)\nКР (HR)\n4 Моделирование методом Монте-Карло\nВ.6.6\nР (R)\nР (R)\nр  (R)\nр  (R)\nП р и м е ч а н и е  — Для отнесения ПО к соответствующему уровню полноты безопасности должен быть \nпредварительно выполнен анализ рисков.\nТ а б л и ц а  Б.5 —  Рекомендации по применению методое/средств моделирования (упомянутого в таблице А.7 \nприложения А)\nМетоды/средства моделирования\nСсылка на струк- \nтурную единицу \nГОСТ Р 53195.5—2010\nРанг применимости методов/средств для\nSIL1\nSIL2\nSIL3\nSIL4\n1 Диаграммы потоков данных\nВ.2.2\nР (R)\nР (R)\nР (R)\nР (R)\n2 Метод конечных автоматов\nБ.2.3.2\n—\nР (R)\nКР (HR)\nКР (HR)\n3 Формальные методы\nВ.2.4\n—\nР (R)\nР (R)\nКР (HR)\n4 Моделирование реализации\nВ.5.20\nР (R)\nКР (HR)\nКР (HR)\nКР (HR)\n5 Метод сетей Петри\nБ.2.3.3\n—\nР (R)\nКР (HR)\nКР (HR)\n6 Макетирование/анимация\nВ.5.17\nР (R)\nр  (R)\nР (R)\nР (R)\n7 Структурные диаграммы\nВ.2.3\nР (R)\nР (R)\nр  (R)\nКР (HR)\nП р и м е ч а н и е  — Должны быть приняты во внимание и другие методы/средства. не указанные в на­\nстоящей таблице.\n32"
        },
        {
            "page": 38,
            "page_content": "ГОСТ Р 53195.4—2010\nТ а б л и ц а  Б.6 — Рекомендации по применению методов/средств тестирования характеристик (упомянутых в \nтаблицах А.5 и А.6 приложения А)\nМ етоды/срсдстаа тестирования характеристик\nСсылка на струк- \nтуриую единицу \nГОСТ Р 5 3 1 9 5 .5 -2 0 1 0\nРанг применимости методов/средств для\nSIL1\nSIL2\nSIL3\nSIL4\n1 Тестирование в предельных режимах\nВ.5.21\nР (R)\nP(R)\nКР (HR)\nКР (HR)\n2 Ограничение временных интервалов и объ­\nема памяти\nВ.5 22\nКР (HR)\nКР (HR)\nКР (HR)\nКР (HR)\n3 Требования к реализации\nВ.5.19\nКР (HR)\nКР (HR)\nКР (HR)\nКР (HR)\nТ а б л и ц а  Б.7 —  Рекомендации по применению полуформальных методов/средств (упомянутых в таблицах А. 1 \nА.2 и А.4 приложения А)\nПолуф ормальные иетоды/средства\nСсылка на струк- \nтуриую единицу \nГОСТ Р 5 3 1 9 5 .5 -2 0 1 0\nРанг применимости методов/средств для\nSIL1\nSIL2\nSIL3\nSIL4\n1 Логические/функциональные блок-схемы\nВ.7\nP(R>\nP(R)\nKP(HR)\nKP (HR)\n2 Диаграммы последовательности\nВ.7\nP(R>\nP(R)\nKP(HR)\nKP (HR)\n3 Диаграммы потоков данных\nВ.2.2\nP(R)\nP (R)\nP (R)\nP(R)\n4 Метод конечных автомагов/диаграммы пере­\nходов\nБ.2.3.2\nP(R)\nP(R)\nKP (HR)\nKP (HR)\n5 Метод сетей Петри\nБ .2.3.3\nP(R)\nP(R)\nKP (HR)\nKP (HR)\n6 Таблицы решений и таблицы истинности\nВ.6.1\nP(R)\nP(R)\nKP (HR)\nKP (HR)\nТ а б л и ц а  Б.8 — Рекомендации по применению методов/средств статического анализа (упомянутого в табли­\nце А.9 приложения А)\nМ етоды/средства статического анализа\nСсылка на струк- \nтуриую единицу \nГОСТ Р 53195.5 -2 0 1 0\nРанг применимости методов/средсто для\nSIL1\nSH.2\nSIL3\nSIl 4\n1 Анализ граничных значений\nВ.5.4\nР (R)\nP(R)\nKP (HR)\nKP (HR)\n2 Таблица контрольных проверок\nБ.2.5\nр  (R)\nP(R)\nP(R)\nP(R)\n3 Анализ потоков управления\nВ.5.9\nр  (R)\nKP (HR)\nKP (HR)\nKP (HR)\n4 Анализ потоков данных\nВ.5.10\nР (R)\nKP (HR)\nKP (HR)\nKP (HR)\n5 Предположение ошибок\nВ.5.5\nP(R>\nP(R)\np  (R)\nP(R)\n6 Инспекция программ по Фей га ну\nВ.5.15\n—\nP (R)\nP(R)\nKP (HR)\n7 Анализ скрытых путей исполнения\nВ.5.11\n—\n—\np  (R)\nP(R)\n8 Тестирование на символьном уровне\nВ.5.12\nP(R)\nP(R)\nKP (HR)\nKP (HR)\n9 Сквозной прогон'просмотр проекта\nВ.5.16\nКР (HR)\nKP (HR)\nKP (HR)\nKP (HR)\n33"
        },
        {
            "page": 39,
            "page_content": "ГОСТ Р 53195.4—2010\nТ а б л и ц а  Б.9 — Рекомендации по применению методов/средств модульного подхода (упомянутого в таблице А.4 \nприложения А)\nМетоды ('средства статического анализа\nС сы пка на струн- \nтурную  единицу \nГОСТ Р 5 3 1 9 5 .6 -2 0 1 0\nРант применимости мет од on.'средств дли\nSIL1\nSIL2\nSIL3\nSIL4\n1 Ограничение размера программного модуля\n8.2.9\nКР (HR)\nКР (HR)\nКР (HR)\nКР (HR)\n2 Ограничение доступа‘'инкапсуляция инфор­\nмации\nВ.2.8\nР (R)\nКР (HR)\nК Р (HR)\nКР (HR)\n3 Ограничение числа параметров\nВ.2.9\nР (R)\nP(R>\nP(R)\nP(R)\n4 Одна точка входа и одна точка выхода в каж­\nдой подпрограмме и фунхции\nВ.2.9\nКР (HR)\nКР (HR)\nКР (HR)\nKP (HR)\n5 Полностью определенный интерфейс\nВ.2.9\nКР (HR)\nКР (HR)\nКР (HR)\nKP (HR)\n34"
        },
        {
            "page": 40,
            "page_content": "ГОСТ Р 53195.4—2010\nБиблиография\n|1] МЭК 61131-3:2003 Программируемые контроллеры. Часть 3. Языки программирования (IEC 61131-3:2003 \nProgrammable controllers — Part 3: Programming languages)\n35"
        },
        {
            "page": 41,
            "page_content": "ГОСТ Р 53195.4—2010\nУДК 621.5:814.8:006.354\nОКС 13.110, 13.220.01. \nОКП 43 7000. 43 7100.\n13.310. 13.320, 29.130.20. \n43 7200. 43 7280.\n35.240 \n70 3000\nКлючевые слова: безопасность функциональная, связанные с безопасностью зданий и сооружений си­\nстемы. требования к программному обеспечению\nРедактор Л. В. Корвтнихова \nТехнический редактор В.И. Прусакова \nКорректор М.В. Бучная \nКомпьютерная верстка Л.А. Круговой\nС дано в набор 25.10.2018. \nПодписано в печать 20.11 2018. \nФормат 6 0 *8 4 1i’8. \nГарнитура Лриал. \nУел. печ. л. 4.65 \nУч.-иад. л. 4.21.\nПодготовлено на основе электронной версии, предоставленной разработчиком стандарта\nСоздано в единичном исполнении Ф ГУП  «С ТАН ДАРТИН ФО РМ * для комплектования Федерального инф ормационного \nФ онда стандартов. 117418 М осква. Нахимовский пр-т, д. 31. к. 2. \nw r «  gostinfo.ru \ninfo@ gostinro.ru\nГОСТ Р 53195.4-2010"
        }
    ],
    "scope": "Устанавливает требования к программному обеспечению функциональной безопасности систем, связанных с безопасностью зданий и сооружений.",
    "keywords": [
        "функциональная безопасность",
        "здания",
        "сооружения",
        "системы",
        "программное обеспечение"
    ],
    "revision": "Переиздание. Октябрь 2018 г.",
    "confidence_scores": {
        "full_name": 0.95,
        "number": 0.98,
        "date_issue": 0.99,
        "type": 0.99,
        "category": 0.85,
        "revision": 0.9
    }
}